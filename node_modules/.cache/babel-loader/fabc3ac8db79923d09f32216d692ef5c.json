{"ast":null,"code":"import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when operation is going to be executed on a subject without identifier.\n * This error should never be thrown, however it still presents to prevent user from updation or removing the whole table.\n * If this error occurs still, it most probably is an ORM internal problem which must be reported and fixed.\n */\n\nexport class SubjectWithoutIdentifierError extends TypeORMError {\n  constructor(subject) {\n    super(`Internal error. Subject ${subject.metadata.targetName} must have an identifier to perform operation.`);\n  }\n\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAT,QAA6B,gBAA7B;AAEA;;;;;;AAKA,OAAM,MAAOC,6BAAP,SAA6CD,YAA7C,CAAyD;EAC3DE,YAAYC,OAAZ,EAA4B;IACxB,MACI,2BAA2BA,OAAO,CAACC,QAAR,CAAiBC,UAAU,gDAD1D;EAGH;;AAL0D","names":["TypeORMError","SubjectWithoutIdentifierError","constructor","subject","metadata","targetName"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\error\\SubjectWithoutIdentifierError.ts"],"sourcesContent":["import { Subject } from \"../persistence/Subject\"\nimport { TypeORMError } from \"./TypeORMError\"\n\n/**\n * Thrown when operation is going to be executed on a subject without identifier.\n * This error should never be thrown, however it still presents to prevent user from updation or removing the whole table.\n * If this error occurs still, it most probably is an ORM internal problem which must be reported and fixed.\n */\nexport class SubjectWithoutIdentifierError extends TypeORMError {\n    constructor(subject: Subject) {\n        super(\n            `Internal error. Subject ${subject.metadata.targetName} must have an identifier to perform operation.`,\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}