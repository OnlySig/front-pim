{"ast":null,"code":"/**\n * Dummy class for replacement via `package.json` in browser builds.\n *\n * If we don't include these functions typeorm will throw an error on runtime\n * as well as during webpack builds.\n */\nexport class ConnectionOptionsEnvReader {\n  async read() {\n    throw new Error(`Cannot read connection options in a browser context.`);\n  }\n\n}\n/**\n * Dummy class for replacement via `package.json` in browser builds.\n *\n * If we don't include these functions typeorm will throw an error on runtime\n * as well as during webpack builds.\n */\n\nexport class ConnectionOptionsXmlReader {\n  async read(path) {\n    throw new Error(`Cannot read connection options in a browser context.`);\n  }\n\n}\n/**\n * Dummy class for replacement via `package.json` in browser builds.\n *\n * If we don't include these functions typeorm will throw an error on runtime\n * as well as during webpack builds.\n */\n\nexport class ConnectionOptionsYmlReader {\n  async read(path) {\n    throw new Error(`Cannot read connection options in a browser context.`);\n  }\n\n}\n/**\n * Dummy class for replacement via `package.json` in browser builds.\n *\n * If we don't include these functions typeorm will throw an error on runtime\n * as well as during webpack builds.\n */\n\nexport class ConnectionOptionsReader {\n  async all() {\n    throw new Error(`Cannot read connection options in a browser context.`);\n  }\n\n  async get() {\n    throw new Error(`Cannot read connection options in a browser context.`);\n  }\n\n  async has() {\n    throw new Error(`Cannot read connection options in a browser context.`);\n  }\n\n}","map":{"version":3,"mappings":"AAAA;;;;;;AAMA,OAAM,MAAOA,0BAAP,CAAiC;EACzB,MAAJC,IAAI;IACN,MAAM,IAAIC,KAAJ,CAAU,sDAAV,CAAN;EACH;;AAHkC;AAMvC;;;;;;;AAMA,OAAM,MAAOC,0BAAP,CAAiC;EACzB,MAAJF,IAAI,CAACG,IAAD,EAAa;IACnB,MAAM,IAAIF,KAAJ,CAAU,sDAAV,CAAN;EACH;;AAHkC;AAMvC;;;;;;;AAMA,OAAM,MAAOG,0BAAP,CAAiC;EACzB,MAAJJ,IAAI,CAACG,IAAD,EAAa;IACnB,MAAM,IAAIF,KAAJ,CAAU,sDAAV,CAAN;EACH;;AAHkC;AAMvC;;;;;;;AAMA,OAAM,MAAOI,uBAAP,CAA8B;EACvB,MAAHC,GAAG;IACL,MAAM,IAAIL,KAAJ,CAAU,sDAAV,CAAN;EACH;;EAEQ,MAAHM,GAAG;IACL,MAAM,IAAIN,KAAJ,CAAU,sDAAV,CAAN;EACH;;EAEQ,MAAHO,GAAG;IACL,MAAM,IAAIP,KAAJ,CAAU,sDAAV,CAAN;EACH;;AAX+B","names":["ConnectionOptionsEnvReader","read","Error","ConnectionOptionsXmlReader","path","ConnectionOptionsYmlReader","ConnectionOptionsReader","all","get","has"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\platform\\BrowserConnectionOptionsReaderDummy.ts"],"sourcesContent":["/**\n * Dummy class for replacement via `package.json` in browser builds.\n *\n * If we don't include these functions typeorm will throw an error on runtime\n * as well as during webpack builds.\n */\nexport class ConnectionOptionsEnvReader {\n    async read() {\n        throw new Error(`Cannot read connection options in a browser context.`);\n    }\n}\n\n/**\n * Dummy class for replacement via `package.json` in browser builds.\n *\n * If we don't include these functions typeorm will throw an error on runtime\n * as well as during webpack builds.\n */\nexport class ConnectionOptionsXmlReader {\n    async read(path: string) {\n        throw new Error(`Cannot read connection options in a browser context.`);\n    }\n}\n\n/**\n * Dummy class for replacement via `package.json` in browser builds.\n *\n * If we don't include these functions typeorm will throw an error on runtime\n * as well as during webpack builds.\n */\nexport class ConnectionOptionsYmlReader {\n    async read(path: string) {\n        throw new Error(`Cannot read connection options in a browser context.`);\n    }\n}\n\n/**\n * Dummy class for replacement via `package.json` in browser builds.\n *\n * If we don't include these functions typeorm will throw an error on runtime\n * as well as during webpack builds.\n */\nexport class ConnectionOptionsReader {\n    async all() {\n        throw new Error(`Cannot read connection options in a browser context.`);\n    }\n\n    async get() {\n        throw new Error(`Cannot read connection options in a browser context.`);\n    }\n\n    async has() {\n        throw new Error(`Cannot read connection options in a browser context.`);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}