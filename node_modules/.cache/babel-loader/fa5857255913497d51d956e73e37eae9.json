{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GabrielC\\\\Documents\\\\atvfrontend\\\\src\\\\pages\\\\Login\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport { apiLogin } from '../../services/api';\nimport { useNavigate } from \"react-router-dom\";\nimport { Layout } from \"./style\";\nimport { Button } from \"../../components/Button/index\";\nimport { Input } from \"../../components/Input/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  email: yup.string().email('email não é valido').required('Campo obrigatório'),\n  password: yup.string().min(6, 'No minimo 6 caracteres').required('Campo obrigatório')\n}).required();\n\nconst Login = () => {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const navigate = useNavigate();\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema),\n    mode: 'onChange'\n  });\n\n  const onSubmit = async formData => {\n    const {\n      data\n    } = await apiLogin.get(`users?email=${formData.email}&senha=${formData.password}`);\n\n    try {\n      if (data.length === 1) {\n        navigate('/view_users');\n      } else {\n        alert('Email ou senha invalidos');\n      }\n    } catch {\n      alert('Houve um erro, tente novamente!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Entrar no Safe\", /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Car\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          name: \"email\",\n          errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n          control: control,\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"password\",\n          errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message,\n          control: control,\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          title: \"Entrar\",\n          variant: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"+5+s6yujyMdEP2rL5733gaC5Rd0=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = Login;\nexport { Login };\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useForm","yupResolver","yup","apiLogin","useNavigate","Layout","Button","Input","schema","object","email","string","required","password","min","Login","navigate","control","handleSubmit","formState","errors","resolver","mode","onSubmit","formData","data","get","length","alert","message"],"sources":["C:/Users/GabrielC/Documents/atvfrontend/src/pages/Login/index.tsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport { apiLogin } from '../../services/api';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nimport {Layout, SpanForgot, SpanCar } from \"./style\";\r\n\r\n\r\nimport { Button } from \"../../components/Button/index\";\r\nimport { Input } from \"../../components/Input/index\";\r\nimport { IFormData } from \"./types.js\";\r\n\r\nconst schema = yup.object({\r\n  email: yup.string().email('email não é valido').required('Campo obrigatório'),\r\n  password: yup.string().min(6,'No minimo 6 caracteres').required('Campo obrigatório'),\r\n}).required();\r\n\r\nconst Login = () => {  \r\n  const navigate =  useNavigate();\r\n\r\n  const { control, handleSubmit, formState: { errors } } = useForm<IFormData>({\r\n    resolver: yupResolver(schema),\r\n    mode: 'onChange',\r\n  });\r\n  \r\n  const onSubmit = async (formData: IFormData) => {\r\n    const { data } = await apiLogin.get(`users?email=${formData.email}&senha=${formData.password}`)\r\n    try {\r\n      if(data.length === 1) {\r\n        navigate('/view_users')\r\n      } else {\r\n        alert('Email ou senha invalidos')\r\n      }\r\n    } catch {\r\n      alert('Houve um erro, tente novamente!')\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <Layout>\r\n      <span>Entrar no Safe<h1>Car</h1></span>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Input name='email' errorMessage={errors?.email?.message} control={control}  placeholder=\"Email\" />\r\n          <Input name='password' errorMessage={errors?.password?.message} control={control}  placeholder=\"Password\"/>\r\n          <Button type=\"submit\" title=\"Entrar\" variant=\"secondary\" /> \r\n      </form>\r\n        {/* <Link style={{ textDecoration: 'none' }} to=\"/register\"><SpanForgot>Cadastrar-se</SpanForgot></Link>\r\n        <Link style={{ textDecoration: 'none' }} to=\"/recover\"><SpanForgot>Esqueci minha senha</SpanForgot></Link> */}\r\n        </Layout>\r\n      </>\r\n  )\r\n}\r\n\r\nexport { Login };"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAAeC,WAAf,QAAkC,kBAAlC;AAEA,SAAQC,MAAR,QAA2C,SAA3C;AAGA,SAASC,MAAT,QAAuB,+BAAvB;AACA,SAASC,KAAT,QAAsB,8BAAtB;;;AAGA,MAAMC,MAAM,GAAGN,GAAG,CAACO,MAAJ,CAAW;EACxBC,KAAK,EAAER,GAAG,CAACS,MAAJ,GAAaD,KAAb,CAAmB,oBAAnB,EAAyCE,QAAzC,CAAkD,mBAAlD,CADiB;EAExBC,QAAQ,EAAEX,GAAG,CAACS,MAAJ,GAAaG,GAAb,CAAiB,CAAjB,EAAmB,wBAAnB,EAA6CF,QAA7C,CAAsD,mBAAtD;AAFc,CAAX,EAGZA,QAHY,EAAf;;AAKA,MAAMG,KAAK,GAAG,MAAM;EAAA;;EAAA;;EAClB,MAAMC,QAAQ,GAAIZ,WAAW,EAA7B;EAEA,MAAM;IAAEa,OAAF;IAAWC,YAAX;IAAyBC,SAAS,EAAE;MAAEC;IAAF;EAApC,IAAmDpB,OAAO,CAAY;IAC1EqB,QAAQ,EAAEpB,WAAW,CAACO,MAAD,CADqD;IAE1Ec,IAAI,EAAE;EAFoE,CAAZ,CAAhE;;EAKA,MAAMC,QAAQ,GAAG,MAAOC,QAAP,IAA+B;IAC9C,MAAM;MAAEC;IAAF,IAAW,MAAMtB,QAAQ,CAACuB,GAAT,CAAc,eAAcF,QAAQ,CAACd,KAAM,UAASc,QAAQ,CAACX,QAAS,EAAtE,CAAvB;;IACA,IAAI;MACF,IAAGY,IAAI,CAACE,MAAL,KAAgB,CAAnB,EAAsB;QACpBX,QAAQ,CAAC,aAAD,CAAR;MACD,CAFD,MAEO;QACLY,KAAK,CAAC,0BAAD,CAAL;MACD;IACF,CAND,CAME,MAAM;MACNA,KAAK,CAAC,iCAAD,CAAL;IACD;EACF,CAXD;;EAaA,oBACE;IAAA,uBACE,QAAC,MAAD;MAAA,wBACA;QAAA,0CAAoB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAApB;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAEA;QAAM,QAAQ,EAAEV,YAAY,CAACK,QAAD,CAA5B;QAAA,wBACI,QAAC,KAAD;UAAO,IAAI,EAAC,OAAZ;UAAoB,YAAY,EAAEH,MAAF,aAAEA,MAAF,wCAAEA,MAAM,CAAEV,KAAV,kDAAE,cAAemB,OAAjD;UAA0D,OAAO,EAAEZ,OAAnE;UAA6E,WAAW,EAAC;QAAzF;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,KAAD;UAAO,IAAI,EAAC,UAAZ;UAAuB,YAAY,EAAEG,MAAF,aAAEA,MAAF,2CAAEA,MAAM,CAAEP,QAAV,qDAAE,iBAAkBgB,OAAvD;UAAgE,OAAO,EAAEZ,OAAzE;UAAmF,WAAW,EAAC;QAA/F;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI,QAAC,MAAD;UAAQ,IAAI,EAAC,QAAb;UAAsB,KAAK,EAAC,QAA5B;UAAqC,OAAO,EAAC;QAA7C;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAcD,CAnCD;;GAAMF,K;UACcX,W,EAEuCJ,O;;;KAHrDe,K;AAqCN,SAASA,KAAT"},"metadata":{},"sourceType":"module"}