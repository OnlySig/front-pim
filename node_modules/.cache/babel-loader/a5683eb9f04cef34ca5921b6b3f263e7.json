{"ast":null,"code":"export class ApplyValueTransformers {\n  static transformFrom(transformer, databaseValue) {\n    if (Array.isArray(transformer)) {\n      const reverseTransformers = transformer.slice().reverse();\n      return reverseTransformers.reduce((transformedValue, _transformer) => {\n        return _transformer.from(transformedValue);\n      }, databaseValue);\n    }\n\n    return transformer.from(databaseValue);\n  }\n\n  static transformTo(transformer, entityValue) {\n    if (Array.isArray(transformer)) {\n      return transformer.reduce((transformedValue, _transformer) => {\n        return _transformer.to(transformedValue);\n      }, entityValue);\n    }\n\n    return transformer.to(entityValue);\n  }\n\n}","map":{"version":3,"mappings":"AAEA,OAAM,MAAOA,sBAAP,CAA6B;EACX,OAAbC,aAAa,CAChBC,WADgB,EAEhBC,aAFgB,EAEE;IAElB,IAAIC,KAAK,CAACC,OAAN,CAAcH,WAAd,CAAJ,EAAgC;MAC5B,MAAMI,mBAAmB,GAAGJ,WAAW,CAACK,KAAZ,GAAoBC,OAApB,EAA5B;MACA,OAAOF,mBAAmB,CAACG,MAApB,CACH,CAACC,gBAAD,EAAmBC,YAAnB,KAAmC;QAC/B,OAAOA,YAAY,CAACC,IAAb,CAAkBF,gBAAlB,CAAP;MACH,CAHE,EAIHP,aAJG,CAAP;IAMH;;IACD,OAAOD,WAAW,CAACU,IAAZ,CAAiBT,aAAjB,CAAP;EACH;;EACiB,OAAXU,WAAW,CACdX,WADc,EAEdY,WAFc,EAEE;IAEhB,IAAIV,KAAK,CAACC,OAAN,CAAcH,WAAd,CAAJ,EAAgC;MAC5B,OAAOA,WAAW,CAACO,MAAZ,CAAmB,CAACC,gBAAD,EAAmBC,YAAnB,KAAmC;QACzD,OAAOA,YAAY,CAACI,EAAb,CAAgBL,gBAAhB,CAAP;MACH,CAFM,EAEJI,WAFI,CAAP;IAGH;;IACD,OAAOZ,WAAW,CAACa,EAAZ,CAAeD,WAAf,CAAP;EACH;;AA1B8B","names":["ApplyValueTransformers","transformFrom","transformer","databaseValue","Array","isArray","reverseTransformers","slice","reverse","reduce","transformedValue","_transformer","from","transformTo","entityValue","to"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\util\\ApplyValueTransformers.ts"],"sourcesContent":["import { ValueTransformer } from \"../decorator/options/ValueTransformer\"\n\nexport class ApplyValueTransformers {\n    static transformFrom(\n        transformer: ValueTransformer | ValueTransformer[],\n        databaseValue: any,\n    ) {\n        if (Array.isArray(transformer)) {\n            const reverseTransformers = transformer.slice().reverse()\n            return reverseTransformers.reduce(\n                (transformedValue, _transformer) => {\n                    return _transformer.from(transformedValue)\n                },\n                databaseValue,\n            )\n        }\n        return transformer.from(databaseValue)\n    }\n    static transformTo(\n        transformer: ValueTransformer | ValueTransformer[],\n        entityValue: any,\n    ) {\n        if (Array.isArray(transformer)) {\n            return transformer.reduce((transformedValue, _transformer) => {\n                return _transformer.to(transformedValue)\n            }, entityValue)\n        }\n        return transformer.to(entityValue)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}