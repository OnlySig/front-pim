{"ast":null,"code":"import { TypeORMError } from \"./TypeORMError\";\nimport { ObjectUtils } from \"../util/ObjectUtils\";\nimport { InstanceChecker } from \"../util/InstanceChecker\";\nexport class EntityMetadataNotFoundError extends TypeORMError {\n  constructor(target) {\n    super();\n    this.message = `No metadata for \"${this.stringifyTarget(target)}\" was found.`;\n  }\n\n  stringifyTarget(target) {\n    if (InstanceChecker.isEntitySchema(target)) {\n      return target.options.name;\n    } else if (typeof target === \"function\") {\n      return target.name;\n    } else if (ObjectUtils.isObject(target) && \"name\" in target) {\n      return target.name;\n    } else {\n      return target;\n    }\n  }\n\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AAEA,OAAM,MAAOC,2BAAP,SAA2CH,YAA3C,CAAuD;EACzDI,YAAYC,MAAZ,EAAqC;IACjC;IAEA,KAAKC,OAAL,GAAe,oBAAoB,KAAKC,eAAL,CAC/BF,MAD+B,CAElC,cAFD;EAGH;;EAEOE,eAAe,CAACF,MAAD,EAA0B;IAC7C,IAAIH,eAAe,CAACM,cAAhB,CAA+BH,MAA/B,CAAJ,EAA4C;MACxC,OAAOA,MAAM,CAACI,OAAP,CAAeC,IAAtB;IACH,CAFD,MAEO,IAAI,OAAOL,MAAP,KAAkB,UAAtB,EAAkC;MACrC,OAAOA,MAAM,CAACK,IAAd;IACH,CAFM,MAEA,IAAIT,WAAW,CAACU,QAAZ,CAAqBN,MAArB,KAAgC,UAAWA,MAA/C,EAA+D;MAClE,OAAQA,MAAc,CAACK,IAAvB;IACH,CAFM,MAEA;MACH,OAAOL,MAAP;IACH;EACJ;;AAnBwD","names":["TypeORMError","ObjectUtils","InstanceChecker","EntityMetadataNotFoundError","constructor","target","message","stringifyTarget","isEntitySchema","options","name","isObject"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\error\\EntityMetadataNotFoundError.ts"],"sourcesContent":["import { EntityTarget } from \"../common/EntityTarget\"\nimport { TypeORMError } from \"./TypeORMError\"\nimport { ObjectUtils } from \"../util/ObjectUtils\"\nimport { InstanceChecker } from \"../util/InstanceChecker\"\n\nexport class EntityMetadataNotFoundError extends TypeORMError {\n    constructor(target: EntityTarget<any>) {\n        super()\n\n        this.message = `No metadata for \"${this.stringifyTarget(\n            target,\n        )}\" was found.`\n    }\n\n    private stringifyTarget(target: EntityTarget<any>): string {\n        if (InstanceChecker.isEntitySchema(target)) {\n            return target.options.name\n        } else if (typeof target === \"function\") {\n            return target.name\n        } else if (ObjectUtils.isObject(target) && \"name\" in (target as any)) {\n            return (target as any).name\n        } else {\n            return target as any\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}