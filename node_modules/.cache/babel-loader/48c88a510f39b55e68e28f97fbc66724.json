{"ast":null,"code":"import { SimpleConsoleLogger } from \"./SimpleConsoleLogger\";\nimport { AdvancedConsoleLogger } from \"./AdvancedConsoleLogger\";\nimport { FileLogger } from \"./FileLogger\";\nimport { DebugLogger } from \"./DebugLogger\";\nimport { ObjectUtils } from \"../util/ObjectUtils\";\n/**\n * Helps to create logger instances.\n */\n\nexport class LoggerFactory {\n  /**\n   * Creates a new logger depend on a given connection's driver.\n   */\n  create(logger, options) {\n    if (ObjectUtils.isObject(logger)) return logger;\n\n    if (logger) {\n      switch (logger) {\n        case \"simple-console\":\n          return new SimpleConsoleLogger(options);\n\n        case \"file\":\n          return new FileLogger(options);\n\n        case \"advanced-console\":\n          return new AdvancedConsoleLogger(options);\n\n        case \"debug\":\n          return new DebugLogger();\n      }\n    }\n\n    return new AdvancedConsoleLogger(options);\n  }\n\n}","map":{"version":3,"mappings":"AAEA,SAASA,mBAAT,QAAoC,uBAApC;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA;;;;AAGA,OAAM,MAAOC,aAAP,CAAoB;EACtB;;;EAGAC,MAAM,CACFC,MADE,EAOFC,OAPE,EAOqB;IAEvB,IAAIJ,WAAW,CAACK,QAAZ,CAAqBF,MAArB,CAAJ,EAAkC,OAAOA,MAAP;;IAElC,IAAIA,MAAJ,EAAY;MACR,QAAQA,MAAR;QACI,KAAK,gBAAL;UACI,OAAO,IAAIP,mBAAJ,CAAwBQ,OAAxB,CAAP;;QAEJ,KAAK,MAAL;UACI,OAAO,IAAIN,UAAJ,CAAeM,OAAf,CAAP;;QAEJ,KAAK,kBAAL;UACI,OAAO,IAAIP,qBAAJ,CAA0BO,OAA1B,CAAP;;QAEJ,KAAK,OAAL;UACI,OAAO,IAAIL,WAAJ,EAAP;MAXR;IAaH;;IAED,OAAO,IAAIF,qBAAJ,CAA0BO,OAA1B,CAAP;EACH;;AAhCqB","names":["SimpleConsoleLogger","AdvancedConsoleLogger","FileLogger","DebugLogger","ObjectUtils","LoggerFactory","create","logger","options","isObject"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\logger\\LoggerFactory.ts"],"sourcesContent":["import { Logger } from \"./Logger\"\nimport { LoggerOptions } from \"./LoggerOptions\"\nimport { SimpleConsoleLogger } from \"./SimpleConsoleLogger\"\nimport { AdvancedConsoleLogger } from \"./AdvancedConsoleLogger\"\nimport { FileLogger } from \"./FileLogger\"\nimport { DebugLogger } from \"./DebugLogger\"\nimport { ObjectUtils } from \"../util/ObjectUtils\"\n\n/**\n * Helps to create logger instances.\n */\nexport class LoggerFactory {\n    /**\n     * Creates a new logger depend on a given connection's driver.\n     */\n    create(\n        logger?:\n            | \"advanced-console\"\n            | \"simple-console\"\n            | \"file\"\n            | \"debug\"\n            | Logger,\n        options?: LoggerOptions,\n    ): Logger {\n        if (ObjectUtils.isObject(logger)) return logger as Logger\n\n        if (logger) {\n            switch (logger) {\n                case \"simple-console\":\n                    return new SimpleConsoleLogger(options)\n\n                case \"file\":\n                    return new FileLogger(options)\n\n                case \"advanced-console\":\n                    return new AdvancedConsoleLogger(options)\n\n                case \"debug\":\n                    return new DebugLogger()\n            }\n        }\n\n        return new AdvancedConsoleLogger(options)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}