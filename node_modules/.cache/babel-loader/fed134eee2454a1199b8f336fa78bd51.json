{"ast":null,"code":"/**\n * Dummy functions for replacement via `package.json` in browser builds.\n *\n * If we don't include these functions typeorm will throw an error on runtime\n * as well as during webpack builds.\n */\n\n/**\n * Loads all exported classes from the given directory.\n */\nexport function importClassesFromDirectories(logger, directories) {\n  let formats = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [\".js\", \".cjs\", \".ts\"];\n  return [];\n}\n/**\n * Loads all json files from the given directory.\n */\n\nexport function importJsonsFromDirectories(directories) {\n  let format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \".json\";\n  return [];\n}","map":{"version":3,"mappings":"AAAA;;;;;;;AASA;;;AAGA,OAAM,SAAUA,4BAAV,CAAuCC,MAAvC,EAAuDC,WAAvD,EAA8G;EAAA,IAAhCC,OAAgC,uEAAtB,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,CAAsB;EAChH,OAAO,EAAP;AACH;AAED;;;;AAGA,OAAM,SAAUC,0BAAV,CAAqCF,WAArC,EAA4E;EAAA,IAAhBG,MAAgB,uEAAP,OAAO;EAC9E,OAAO,EAAP;AACH","names":["importClassesFromDirectories","logger","directories","formats","importJsonsFromDirectories","format"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\platform\\BrowserDirectoryExportedClassesLoader.ts"],"sourcesContent":["/**\n * Dummy functions for replacement via `package.json` in browser builds.\n *\n * If we don't include these functions typeorm will throw an error on runtime\n * as well as during webpack builds.\n */\n\nimport {Logger} from \"../logger/Logger\";\n\n/**\n * Loads all exported classes from the given directory.\n */\nexport function importClassesFromDirectories(logger: Logger, directories: string[], formats = [\".js\", \".cjs\", \".ts\"]): Function[] {\n    return [];\n}\n\n/**\n * Loads all json files from the given directory.\n */\nexport function importJsonsFromDirectories(directories: string[], format = \".json\"): any[] {\n    return [];\n}\n"]},"metadata":{},"sourceType":"module"}