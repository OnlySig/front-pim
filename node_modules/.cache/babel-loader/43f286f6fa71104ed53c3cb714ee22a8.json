{"ast":null,"code":"export class InstanceChecker {\n  static isMssqlParameter(obj) {\n    return this.check(obj, \"MssqlParameter\");\n  }\n\n  static isEntityMetadata(obj) {\n    return this.check(obj, \"EntityMetadata\");\n  }\n\n  static isColumnMetadata(obj) {\n    return this.check(obj, \"ColumnMetadata\");\n  }\n\n  static isQueryBuilder(obj) {\n    return this.check(obj, \"QueryBuilder\") || this.check(obj, \"SelectQueryBuilder\") || this.check(obj, \"InsertQueryBuilder\") || this.check(obj, \"DeleteQueryBuilder\") || this.check(obj, \"UpdateQueryBuilder\") || this.check(obj, \"SoftDeleteQueryBuilder\") || this.check(obj, \"RelationQueryBuilder\");\n  }\n\n  static isSelectQueryBuilder(obj) {\n    return this.check(obj, \"SelectQueryBuilder\");\n  }\n\n  static isInsertQueryBuilder(obj) {\n    return this.check(obj, \"InsertQueryBuilder\");\n  }\n\n  static isDeleteQueryBuilder(obj) {\n    return this.check(obj, \"DeleteQueryBuilder\");\n  }\n\n  static isUpdateQueryBuilder(obj) {\n    return this.check(obj, \"UpdateQueryBuilder\");\n  }\n\n  static isSoftDeleteQueryBuilder(obj) {\n    return this.check(obj, \"SoftDeleteQueryBuilder\");\n  }\n\n  static isRelationQueryBuilder(obj) {\n    return this.check(obj, \"RelationQueryBuilder\");\n  }\n\n  static isBrackets(obj) {\n    return this.check(obj, \"Brackets\") || this.check(obj, \"NotBrackets\");\n  }\n\n  static isNotBrackets(obj) {\n    return this.check(obj, \"NotBrackets\");\n  }\n\n  static isSubject(obj) {\n    return this.check(obj, \"Subject\");\n  }\n\n  static isRdbmsSchemaBuilder(obj) {\n    return this.check(obj, \"RdbmsSchemaBuilder\");\n  }\n\n  static isMongoEntityManager(obj) {\n    return this.check(obj, \"MongoEntityManager\");\n  }\n\n  static isSqljsEntityManager(obj) {\n    return this.check(obj, \"SqljsEntityManager\");\n  }\n\n  static isEntitySchema(obj) {\n    return this.check(obj, \"EntitySchema\");\n  }\n\n  static isBaseEntityConstructor(obj) {\n    return typeof obj === \"function\" && typeof obj.hasId === \"function\" && typeof obj.save === \"function\" && typeof obj.useDataSource === \"function\";\n  }\n\n  static isFindOperator(obj) {\n    return this.check(obj, \"FindOperator\") || this.check(obj, \"EqualOperator\");\n  }\n\n  static isEqualOperator(obj) {\n    return this.check(obj, \"EqualOperator\");\n  }\n\n  static isQuery(obj) {\n    return this.check(obj, \"Query\");\n  }\n\n  static isTable(obj) {\n    return this.check(obj, \"Table\");\n  }\n\n  static isTableCheck(obj) {\n    return this.check(obj, \"TableCheck\");\n  }\n\n  static isTableColumn(obj) {\n    return this.check(obj, \"TableColumn\");\n  }\n\n  static isTableExclusion(obj) {\n    return this.check(obj, \"TableExclusion\");\n  }\n\n  static isTableForeignKey(obj) {\n    return this.check(obj, \"TableForeignKey\");\n  }\n\n  static isTableIndex(obj) {\n    return this.check(obj, \"TableIndex\");\n  }\n\n  static isTableUnique(obj) {\n    return this.check(obj, \"TableUnique\");\n  }\n\n  static isView(obj) {\n    return this.check(obj, \"View\");\n  }\n\n  static isDataSource(obj) {\n    return this.check(obj, \"DataSource\");\n  }\n\n  static check(obj, name) {\n    return typeof obj === \"object\" && obj !== null && obj[\"@instanceof\"] === Symbol.for(name);\n  }\n\n}","map":{"version":3,"mappings":"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","names":["InstanceChecker","isMssqlParameter","obj","check","isEntityMetadata","isColumnMetadata","isQueryBuilder","isSelectQueryBuilder","isInsertQueryBuilder","isDeleteQueryBuilder","isUpdateQueryBuilder","isSoftDeleteQueryBuilder","isRelationQueryBuilder","isBrackets","isNotBrackets","isSubject","isRdbmsSchemaBuilder","isMongoEntityManager","isSqljsEntityManager","isEntitySchema","isBaseEntityConstructor","hasId","save","useDataSource","isFindOperator","isEqualOperator","isQuery","isTable","isTableCheck","isTableColumn","isTableExclusion","isTableForeignKey","isTableIndex","isTableUnique","isView","isDataSource","name","Symbol","for"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\util\\InstanceChecker.ts"],"sourcesContent":["import type { MongoEntityManager } from \"../entity-manager/MongoEntityManager\"\nimport type { SqljsEntityManager } from \"../entity-manager/SqljsEntityManager\"\nimport type { EntitySchema } from \"../entity-schema/EntitySchema\"\nimport type { FindOperator } from \"../find-options/FindOperator\"\nimport type { EqualOperator } from \"../find-options/EqualOperator\"\nimport type { Query } from \"../driver/Query\"\nimport type { RdbmsSchemaBuilder } from \"../schema-builder/RdbmsSchemaBuilder\"\nimport type { Subject } from \"../persistence/Subject\"\nimport type { QueryBuilder } from \"../query-builder/QueryBuilder\"\nimport type { SelectQueryBuilder } from \"../query-builder/SelectQueryBuilder\"\nimport type { UpdateQueryBuilder } from \"../query-builder/UpdateQueryBuilder\"\nimport type { DeleteQueryBuilder } from \"../query-builder/DeleteQueryBuilder\"\nimport type { SoftDeleteQueryBuilder } from \"../query-builder/SoftDeleteQueryBuilder\"\nimport type { InsertQueryBuilder } from \"../query-builder/InsertQueryBuilder\"\nimport type { RelationQueryBuilder } from \"../query-builder/RelationQueryBuilder\"\nimport type { Brackets } from \"../query-builder/Brackets\"\nimport type { Table } from \"../schema-builder/table/Table\"\nimport type { TableCheck } from \"../schema-builder/table/TableCheck\"\nimport type { TableColumn } from \"../schema-builder/table/TableColumn\"\nimport type { TableExclusion } from \"../schema-builder/table/TableExclusion\"\nimport type { TableForeignKey } from \"../schema-builder/table/TableForeignKey\"\nimport type { TableIndex } from \"../schema-builder/table/TableIndex\"\nimport type { TableUnique } from \"../schema-builder/table/TableUnique\"\nimport type { View } from \"../schema-builder/view/View\"\nimport type { NotBrackets } from \"../query-builder/NotBrackets\"\nimport type { EntityMetadata } from \"../metadata/EntityMetadata\"\nimport type { ColumnMetadata } from \"../metadata/ColumnMetadata\"\nimport type { MssqlParameter } from \"../driver/sqlserver/MssqlParameter\"\nimport { DataSource } from \"../data-source\"\nimport { BaseEntity } from \"../repository/BaseEntity\"\n\nexport class InstanceChecker {\n    static isMssqlParameter(obj: unknown): obj is MssqlParameter {\n        return this.check(obj, \"MssqlParameter\")\n    }\n    static isEntityMetadata(obj: unknown): obj is EntityMetadata {\n        return this.check(obj, \"EntityMetadata\")\n    }\n    static isColumnMetadata(obj: unknown): obj is ColumnMetadata {\n        return this.check(obj, \"ColumnMetadata\")\n    }\n    static isQueryBuilder(obj: unknown): obj is QueryBuilder<any> {\n        return (\n            this.check(obj, \"QueryBuilder\") ||\n            this.check(obj, \"SelectQueryBuilder\") ||\n            this.check(obj, \"InsertQueryBuilder\") ||\n            this.check(obj, \"DeleteQueryBuilder\") ||\n            this.check(obj, \"UpdateQueryBuilder\") ||\n            this.check(obj, \"SoftDeleteQueryBuilder\") ||\n            this.check(obj, \"RelationQueryBuilder\")\n        )\n    }\n    static isSelectQueryBuilder(obj: unknown): obj is SelectQueryBuilder<any> {\n        return this.check(obj, \"SelectQueryBuilder\")\n    }\n    static isInsertQueryBuilder(obj: unknown): obj is InsertQueryBuilder<any> {\n        return this.check(obj, \"InsertQueryBuilder\")\n    }\n    static isDeleteQueryBuilder(obj: unknown): obj is DeleteQueryBuilder<any> {\n        return this.check(obj, \"DeleteQueryBuilder\")\n    }\n    static isUpdateQueryBuilder(obj: unknown): obj is UpdateQueryBuilder<any> {\n        return this.check(obj, \"UpdateQueryBuilder\")\n    }\n    static isSoftDeleteQueryBuilder(\n        obj: unknown,\n    ): obj is SoftDeleteQueryBuilder<any> {\n        return this.check(obj, \"SoftDeleteQueryBuilder\")\n    }\n    static isRelationQueryBuilder(\n        obj: unknown,\n    ): obj is RelationQueryBuilder<any> {\n        return this.check(obj, \"RelationQueryBuilder\")\n    }\n    static isBrackets(obj: unknown): obj is Brackets {\n        return this.check(obj, \"Brackets\") || this.check(obj, \"NotBrackets\")\n    }\n    static isNotBrackets(obj: unknown): obj is NotBrackets {\n        return this.check(obj, \"NotBrackets\")\n    }\n    static isSubject(obj: unknown): obj is Subject {\n        return this.check(obj, \"Subject\")\n    }\n    static isRdbmsSchemaBuilder(obj: unknown): obj is RdbmsSchemaBuilder {\n        return this.check(obj, \"RdbmsSchemaBuilder\")\n    }\n    static isMongoEntityManager(obj: unknown): obj is MongoEntityManager {\n        return this.check(obj, \"MongoEntityManager\")\n    }\n    static isSqljsEntityManager(obj: unknown): obj is SqljsEntityManager {\n        return this.check(obj, \"SqljsEntityManager\")\n    }\n    static isEntitySchema(obj: unknown): obj is EntitySchema {\n        return this.check(obj, \"EntitySchema\")\n    }\n    static isBaseEntityConstructor(obj: unknown): obj is typeof BaseEntity {\n        return (\n            typeof obj === \"function\" &&\n            typeof (obj as typeof BaseEntity).hasId === \"function\" &&\n            typeof (obj as typeof BaseEntity).save === \"function\" &&\n            typeof (obj as typeof BaseEntity).useDataSource === \"function\"\n        )\n    }\n    static isFindOperator(obj: unknown): obj is FindOperator<any> {\n        return (\n            this.check(obj, \"FindOperator\") || this.check(obj, \"EqualOperator\")\n        )\n    }\n    static isEqualOperator(obj: unknown): obj is EqualOperator<any> {\n        return this.check(obj, \"EqualOperator\")\n    }\n    static isQuery(obj: unknown): obj is Query {\n        return this.check(obj, \"Query\")\n    }\n    static isTable(obj: unknown): obj is Table {\n        return this.check(obj, \"Table\")\n    }\n    static isTableCheck(obj: unknown): obj is TableCheck {\n        return this.check(obj, \"TableCheck\")\n    }\n    static isTableColumn(obj: unknown): obj is TableColumn {\n        return this.check(obj, \"TableColumn\")\n    }\n    static isTableExclusion(obj: unknown): obj is TableExclusion {\n        return this.check(obj, \"TableExclusion\")\n    }\n    static isTableForeignKey(obj: unknown): obj is TableForeignKey {\n        return this.check(obj, \"TableForeignKey\")\n    }\n    static isTableIndex(obj: unknown): obj is TableIndex {\n        return this.check(obj, \"TableIndex\")\n    }\n    static isTableUnique(obj: unknown): obj is TableUnique {\n        return this.check(obj, \"TableUnique\")\n    }\n    static isView(obj: unknown): obj is View {\n        return this.check(obj, \"View\")\n    }\n    static isDataSource(obj: unknown): obj is DataSource {\n        return this.check(obj, \"DataSource\")\n    }\n\n    private static check(obj: unknown, name: string) {\n        return (\n            typeof obj === \"object\" &&\n            obj !== null &&\n            (obj as { \"@instanceof\": Symbol })[\"@instanceof\"] ===\n                Symbol.for(name)\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}