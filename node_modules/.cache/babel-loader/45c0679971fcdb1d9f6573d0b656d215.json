{"ast":null,"code":"/**\n * Syntax sugar.\n * Allows to use brackets in WHERE expressions for better syntax.\n */\nexport class Brackets {\n  /**\n   * Given WHERE query builder that will build a WHERE expression that will be taken into brackets.\n   */\n  constructor(whereFactory) {\n    this[\"@instanceof\"] = Symbol.for(\"Brackets\");\n    this.whereFactory = whereFactory;\n  }\n\n}","map":{"version":3,"mappings":"AAEA;;;;AAIA,OAAM,MAAOA,QAAP,CAAe;EAQjB;;;EAGAC,YAAYC,YAAZ,EAA6D;IAVpD,sBAAgBC,MAAM,CAACC,GAAP,CAAW,UAAX,CAAhB;IAWL,KAAKF,YAAL,GAAoBA,YAApB;EACH;;AAbgB","names":["Brackets","constructor","whereFactory","Symbol","for"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\query-builder\\Brackets.ts"],"sourcesContent":["import { WhereExpressionBuilder } from \"./WhereExpressionBuilder\"\n\n/**\n * Syntax sugar.\n * Allows to use brackets in WHERE expressions for better syntax.\n */\nexport class Brackets {\n    readonly \"@instanceof\" = Symbol.for(\"Brackets\")\n\n    /**\n     * WHERE expression that will be taken into brackets.\n     */\n    whereFactory: (qb: WhereExpressionBuilder) => any\n\n    /**\n     * Given WHERE query builder that will build a WHERE expression that will be taken into brackets.\n     */\n    constructor(whereFactory: (qb: WhereExpressionBuilder) => any) {\n        this.whereFactory = whereFactory\n    }\n}\n"]},"metadata":{},"sourceType":"module"}