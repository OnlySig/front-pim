{"ast":null,"code":"import { getMetadataArgsStorage } from \"../globals\";\nimport { TypeORMError } from \"../error\";\n/**\n * Creates a database check.\n * Can be used on entity property or on entity.\n * Can create checks with composite columns when used on entity.\n */\n\nexport function Check(nameOrExpression, maybeExpression) {\n  const name = maybeExpression ? nameOrExpression : undefined;\n  const expression = maybeExpression ? maybeExpression : nameOrExpression;\n  if (!expression) throw new TypeORMError(`Check expression is required`);\n  return function (clsOrObject, propertyName) {\n    getMetadataArgsStorage().checks.push({\n      target: propertyName ? clsOrObject.constructor : clsOrObject,\n      name: name,\n      expression: expression\n    });\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,sBAAT,QAAuC,YAAvC;AAEA,SAASC,YAAT,QAA6B,UAA7B;AAmBA;;;;;;AAKA,OAAM,SAAUC,KAAV,CACFC,gBADE,EAEFC,eAFE,EAEsB;EAExB,MAAMC,IAAI,GAAGD,eAAe,GAAGD,gBAAH,GAAsBG,SAAlD;EACA,MAAMC,UAAU,GAAGH,eAAe,GAAGA,eAAH,GAAqBD,gBAAvD;EAEA,IAAI,CAACI,UAAL,EAAiB,MAAM,IAAIN,YAAJ,CAAiB,8BAAjB,CAAN;EAEjB,OAAO,UACHO,WADG,EAEHC,YAFG,EAE2B;IAE9BT,sBAAsB,GAAGU,MAAzB,CAAgCC,IAAhC,CAAqC;MACjCC,MAAM,EAAEH,YAAY,GACdD,WAAW,CAACK,WADE,GAEbL,WAH0B;MAIjCH,IAAI,EAAEA,IAJ2B;MAKjCE,UAAU,EAAEA;IALqB,CAArC;EAOH,CAXD;AAYH","names":["getMetadataArgsStorage","TypeORMError","Check","nameOrExpression","maybeExpression","name","undefined","expression","clsOrObject","propertyName","checks","push","target","constructor"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\decorator\\Check.ts"],"sourcesContent":["import { getMetadataArgsStorage } from \"../globals\"\nimport { CheckMetadataArgs } from \"../metadata-args/CheckMetadataArgs\"\nimport { TypeORMError } from \"../error\"\n\n/**\n * Creates a database check.\n * Can be used on entity property or on entity.\n * Can create checks with composite columns when used on entity.\n */\nexport function Check(expression: string): ClassDecorator & PropertyDecorator\n\n/**\n * Creates a database check.\n * Can be used on entity property or on entity.\n * Can create checks with composite columns when used on entity.\n */\nexport function Check(\n    name: string,\n    expression: string,\n): ClassDecorator & PropertyDecorator\n\n/**\n * Creates a database check.\n * Can be used on entity property or on entity.\n * Can create checks with composite columns when used on entity.\n */\nexport function Check(\n    nameOrExpression: string,\n    maybeExpression?: string,\n): ClassDecorator & PropertyDecorator {\n    const name = maybeExpression ? nameOrExpression : undefined\n    const expression = maybeExpression ? maybeExpression : nameOrExpression\n\n    if (!expression) throw new TypeORMError(`Check expression is required`)\n\n    return function (\n        clsOrObject: Function | Object,\n        propertyName?: string | symbol,\n    ) {\n        getMetadataArgsStorage().checks.push({\n            target: propertyName\n                ? clsOrObject.constructor\n                : (clsOrObject as Function),\n            name: name,\n            expression: expression,\n        } as CheckMetadataArgs)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}