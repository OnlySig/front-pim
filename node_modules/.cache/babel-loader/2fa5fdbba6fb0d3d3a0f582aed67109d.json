{"ast":null,"code":"import { TypeORMError } from \"../error\";\nexport class EntitySchemaEmbeddedError extends TypeORMError {\n  static createEntitySchemaIsRequiredException(field) {\n    return new EntitySchemaEmbeddedError(`EntitySchema is required for ${field} embedded field`);\n  }\n\n  static createTargetIsRequired(field) {\n    return new EntitySchemaEmbeddedError(`Target field is required for ${field} embedded EntitySchema`);\n  }\n\n  constructor(message) {\n    super(message);\n  }\n\n}","map":{"version":3,"mappings":"AAAA,SAASA,YAAT,QAA6B,UAA7B;AAEA,OAAM,MAAOC,yBAAP,SAAyCD,YAAzC,CAAqD;EACX,OAArCE,qCAAqC,CACxCC,KADwC,EAC3B;IAEb,OAAO,IAAIF,yBAAJ,CACH,gCAAgCE,KAAK,iBADlC,CAAP;EAGH;;EAE4B,OAAtBC,sBAAsB,CAACD,KAAD,EAAc;IACvC,OAAO,IAAIF,yBAAJ,CACH,gCAAgCE,KAAK,wBADlC,CAAP;EAGH;;EAEDE,YAAYC,OAAZ,EAA2B;IACvB,MAAMA,OAAN;EACH;;AAjBsD","names":["TypeORMError","EntitySchemaEmbeddedError","createEntitySchemaIsRequiredException","field","createTargetIsRequired","constructor","message"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\entity-schema\\EntitySchemaEmbeddedError.ts"],"sourcesContent":["import { TypeORMError } from \"../error\"\n\nexport class EntitySchemaEmbeddedError extends TypeORMError {\n    static createEntitySchemaIsRequiredException(\n        field: string,\n    ): EntitySchemaEmbeddedError {\n        return new EntitySchemaEmbeddedError(\n            `EntitySchema is required for ${field} embedded field`,\n        )\n    }\n\n    static createTargetIsRequired(field: string): EntitySchemaEmbeddedError {\n        return new EntitySchemaEmbeddedError(\n            `Target field is required for ${field} embedded EntitySchema`,\n        )\n    }\n\n    constructor(message: string) {\n        super(message)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}