{"ast":null,"code":"import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when consumer tries to access repository before connection is established.\n */\n\nexport class NoConnectionForRepositoryError extends TypeORMError {\n  constructor(connectionName) {\n    super(`Cannot get a Repository for \"${connectionName} connection, because connection with the database ` + `is not established yet. Call connection#connect method to establish connection.`);\n  }\n\n}","map":{"version":3,"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AAEA;;;;AAGA,OAAM,MAAOC,8BAAP,SAA8CD,YAA9C,CAA0D;EAC5DE,YAAYC,cAAZ,EAAkC;IAC9B,MACI,gCAAgCA,cAAc,oDAA9C,GACI,iFAFR;EAIH;;AAN2D","names":["TypeORMError","NoConnectionForRepositoryError","constructor","connectionName"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\error\\NoConnectionForRepositoryError.ts"],"sourcesContent":["import { TypeORMError } from \"./TypeORMError\"\n\n/**\n * Thrown when consumer tries to access repository before connection is established.\n */\nexport class NoConnectionForRepositoryError extends TypeORMError {\n    constructor(connectionName: string) {\n        super(\n            `Cannot get a Repository for \"${connectionName} connection, because connection with the database ` +\n                `is not established yet. Call connection#connect method to establish connection.`,\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}