{"ast":null,"code":"import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when consumer tries to use naming strategy that does not exist.\n */\n\nexport class NamingStrategyNotFoundError extends TypeORMError {\n  constructor(strategyName, connectionName) {\n    super();\n    const name = typeof strategyName === \"function\" ? strategyName.name : strategyName;\n    this.message = `Naming strategy \"${name}\" was not found. Looks like this naming strategy does not ` + `exist or it was not registered in current \"${connectionName}\" connection?`;\n  }\n\n}","map":{"version":3,"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AAEA;;;;AAGA,OAAM,MAAOC,2BAAP,SAA2CD,YAA3C,CAAuD;EACzDE,YAAYC,YAAZ,EAA6CC,cAA7C,EAAmE;IAC/D;IAEA,MAAMC,IAAI,GACN,OAAOF,YAAP,KAAwB,UAAxB,GACOA,YAAoB,CAACE,IAD5B,GAEMF,YAHV;IAIA,KAAKG,OAAL,GACI,oBAAoBD,IAAI,4DAAxB,GACA,8CAA8CD,cAAc,eAFhE;EAGH;;AAXwD","names":["TypeORMError","NamingStrategyNotFoundError","constructor","strategyName","connectionName","name","message"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\error\\NamingStrategyNotFoundError.ts"],"sourcesContent":["import { TypeORMError } from \"./TypeORMError\"\n\n/**\n * Thrown when consumer tries to use naming strategy that does not exist.\n */\nexport class NamingStrategyNotFoundError extends TypeORMError {\n    constructor(strategyName: string | Function, connectionName: string) {\n        super()\n\n        const name =\n            typeof strategyName === \"function\"\n                ? (strategyName as any).name\n                : strategyName\n        this.message =\n            `Naming strategy \"${name}\" was not found. Looks like this naming strategy does not ` +\n            `exist or it was not registered in current \"${connectionName}\" connection?`\n    }\n}\n"]},"metadata":{},"sourceType":"module"}