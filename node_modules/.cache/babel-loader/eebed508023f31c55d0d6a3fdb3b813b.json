{"ast":null,"code":"import { EntityManager } from \"./EntityManager\";\nimport { MongoEntityManager } from \"./MongoEntityManager\";\nimport { SqljsEntityManager } from \"./SqljsEntityManager\";\n/**\n * Helps to create entity managers.\n */\n\nexport class EntityManagerFactory {\n  /**\n   * Creates a new entity manager depend on a given connection's driver.\n   */\n  create(connection, queryRunner) {\n    if (connection.driver.options.type === \"mongodb\") return new MongoEntityManager(connection);\n    if (connection.driver.options.type === \"sqljs\") return new SqljsEntityManager(connection, queryRunner);\n    return new EntityManager(connection, queryRunner);\n  }\n\n}","map":{"version":3,"mappings":"AACA,SAASA,aAAT,QAA8B,iBAA9B;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AAGA;;;;AAGA,OAAM,MAAOC,oBAAP,CAA2B;EAC7B;;;EAGAC,MAAM,CAACC,UAAD,EAAyBC,WAAzB,EAAkD;IACpD,IAAID,UAAU,CAACE,MAAX,CAAkBC,OAAlB,CAA0BC,IAA1B,KAAmC,SAAvC,EACI,OAAO,IAAIR,kBAAJ,CAAuBI,UAAvB,CAAP;IAEJ,IAAIA,UAAU,CAACE,MAAX,CAAkBC,OAAlB,CAA0BC,IAA1B,KAAmC,OAAvC,EACI,OAAO,IAAIP,kBAAJ,CAAuBG,UAAvB,EAAmCC,WAAnC,CAAP;IAEJ,OAAO,IAAIN,aAAJ,CAAkBK,UAAlB,EAA8BC,WAA9B,CAAP;EACH;;AAZ4B","names":["EntityManager","MongoEntityManager","SqljsEntityManager","EntityManagerFactory","create","connection","queryRunner","driver","options","type"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\entity-manager\\EntityManagerFactory.ts"],"sourcesContent":["import { DataSource } from \"../data-source/DataSource\"\nimport { EntityManager } from \"./EntityManager\"\nimport { MongoEntityManager } from \"./MongoEntityManager\"\nimport { SqljsEntityManager } from \"./SqljsEntityManager\"\nimport { QueryRunner } from \"../query-runner/QueryRunner\"\n\n/**\n * Helps to create entity managers.\n */\nexport class EntityManagerFactory {\n    /**\n     * Creates a new entity manager depend on a given connection's driver.\n     */\n    create(connection: DataSource, queryRunner?: QueryRunner): EntityManager {\n        if (connection.driver.options.type === \"mongodb\")\n            return new MongoEntityManager(connection)\n\n        if (connection.driver.options.type === \"sqljs\")\n            return new SqljsEntityManager(connection, queryRunner)\n\n        return new EntityManager(connection, queryRunner)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}