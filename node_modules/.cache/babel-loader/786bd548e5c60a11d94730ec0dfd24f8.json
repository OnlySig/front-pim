{"ast":null,"code":"import { FindOperator } from \"./FindOperator\";\nexport class EqualOperator extends FindOperator {\n  constructor(value) {\n    super(\"equal\", value);\n    this[\"@instanceof\"] = Symbol.for(\"EqualOperator\");\n  }\n\n}","map":{"version":3,"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AAEA,OAAM,MAAOC,aAAP,SAAgCD,YAAhC,CAA+C;EAGjDE,YAAYC,KAAZ,EAAsC;IAClC,MAAM,OAAN,EAAeA,KAAf;IAHK,sBAAgBC,MAAM,CAACC,GAAP,CAAW,eAAX,CAAhB;EAIR;;AALgD","names":["FindOperator","EqualOperator","constructor","value","Symbol","for"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\find-options\\EqualOperator.ts"],"sourcesContent":["import { FindOperator } from \"./FindOperator\"\n\nexport class EqualOperator<T> extends FindOperator<T> {\n    readonly \"@instanceof\" = Symbol.for(\"EqualOperator\")\n\n    constructor(value: T | FindOperator<T>) {\n        super(\"equal\", value)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}