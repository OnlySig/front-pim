{"ast":null,"code":"export class RandomGenerator {\n  /**\n   *  discuss at: http://locutus.io/php/sha1/\n   * original by: Webtoolkit.info (http://www.webtoolkit.info/)\n   * improved by: Michael White (http://getsprink.com)\n   * improved by: Kevin van Zonneveld (http://kvz.io)\n   *    input by: Brett Zamir (http://brett-zamir.me)\n   *      note 1: Keep in mind that in accordance with PHP, the whole string is buffered and then\n   *      note 1: hashed. If available, we'd recommend using Node's native crypto modules directly\n   *      note 1: in a steaming fashion for faster and more efficient hashing\n   *   example 1: sha1('Kevin van Zonneveld')\n   *   returns 1: '54916d2e62f65b3afa6e192e6a601cdbe5cb5897'\n   */\n  static sha1(str) {\n    let _rotLeft = function (n, s) {\n      let t4 = n << s | n >>> 32 - s;\n      return t4;\n    };\n\n    let _cvtHex = function (val) {\n      let str = \"\";\n      let i;\n      let v;\n\n      for (i = 7; i >= 0; i--) {\n        v = val >>> i * 4 & 0x0f;\n        str += v.toString(16);\n      }\n\n      return str;\n    };\n\n    let blockstart;\n    let i, j;\n    let W = new Array(80);\n    let H0 = 0x67452301;\n    let H1 = 0xefcdab89;\n    let H2 = 0x98badcfe;\n    let H3 = 0x10325476;\n    let H4 = 0xc3d2e1f0;\n    let A, B, C, D, E;\n    let temp; // utf8_encode\n\n    str =\n    /*unescape*/\n    encodeURIComponent(str);\n    let strLen = str.length;\n    let wordArray = [];\n\n    for (i = 0; i < strLen - 3; i += 4) {\n      j = str.charCodeAt(i) << 24 | str.charCodeAt(i + 1) << 16 | str.charCodeAt(i + 2) << 8 | str.charCodeAt(i + 3);\n      wordArray.push(j);\n    }\n\n    switch (strLen % 4) {\n      case 0:\n        i = 0x080000000;\n        break;\n\n      case 1:\n        i = str.charCodeAt(strLen - 1) << 24 | 0x0800000;\n        break;\n\n      case 2:\n        i = str.charCodeAt(strLen - 2) << 24 | str.charCodeAt(strLen - 1) << 16 | 0x08000;\n        break;\n\n      case 3:\n        i = str.charCodeAt(strLen - 3) << 24 | str.charCodeAt(strLen - 2) << 16 | str.charCodeAt(strLen - 1) << 8 | 0x80;\n        break;\n    }\n\n    wordArray.push(i);\n\n    while (wordArray.length % 16 !== 14) {\n      wordArray.push(0);\n    }\n\n    wordArray.push(strLen >>> 29);\n    wordArray.push(strLen << 3 & 0x0ffffffff);\n\n    for (blockstart = 0; blockstart < wordArray.length; blockstart += 16) {\n      for (i = 0; i < 16; i++) {\n        W[i] = wordArray[blockstart + i];\n      }\n\n      for (i = 16; i <= 79; i++) {\n        W[i] = _rotLeft(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n      }\n\n      A = H0;\n      B = H1;\n      C = H2;\n      D = H3;\n      E = H4;\n\n      for (i = 0; i <= 19; i++) {\n        temp = _rotLeft(A, 5) + (B & C | ~B & D) + E + W[i] + 0x5a827999 & 0x0ffffffff;\n        E = D;\n        D = C;\n        C = _rotLeft(B, 30);\n        B = A;\n        A = temp;\n      }\n\n      for (i = 20; i <= 39; i++) {\n        temp = _rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0x6ed9eba1 & 0x0ffffffff;\n        E = D;\n        D = C;\n        C = _rotLeft(B, 30);\n        B = A;\n        A = temp;\n      }\n\n      for (i = 40; i <= 59; i++) {\n        temp = _rotLeft(A, 5) + (B & C | B & D | C & D) + E + W[i] + 0x8f1bbcdc & 0x0ffffffff;\n        E = D;\n        D = C;\n        C = _rotLeft(B, 30);\n        B = A;\n        A = temp;\n      }\n\n      for (i = 60; i <= 79; i++) {\n        temp = _rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0xca62c1d6 & 0x0ffffffff;\n        E = D;\n        D = C;\n        C = _rotLeft(B, 30);\n        B = A;\n        A = temp;\n      }\n\n      H0 = H0 + A & 0x0ffffffff;\n      H1 = H1 + B & 0x0ffffffff;\n      H2 = H2 + C & 0x0ffffffff;\n      H3 = H3 + D & 0x0ffffffff;\n      H4 = H4 + E & 0x0ffffffff;\n    }\n\n    temp = _cvtHex(H0) + _cvtHex(H1) + _cvtHex(H2) + _cvtHex(H3) + _cvtHex(H4);\n    return temp.toLowerCase();\n  }\n\n}","map":{"version":3,"mappings":"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","names":["RandomGenerator","sha1","str","_rotLeft","n","s","t4","_cvtHex","val","i","v","toString","blockstart","j","W","Array","H0","H1","H2","H3","H4","A","B","C","D","E","temp","encodeURIComponent","strLen","length","wordArray","charCodeAt","push","toLowerCase"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\util\\RandomGenerator.ts"],"sourcesContent":["export class RandomGenerator {\n    /**\n     *  discuss at: http://locutus.io/php/sha1/\n     * original by: Webtoolkit.info (http://www.webtoolkit.info/)\n     * improved by: Michael White (http://getsprink.com)\n     * improved by: Kevin van Zonneveld (http://kvz.io)\n     *    input by: Brett Zamir (http://brett-zamir.me)\n     *      note 1: Keep in mind that in accordance with PHP, the whole string is buffered and then\n     *      note 1: hashed. If available, we'd recommend using Node's native crypto modules directly\n     *      note 1: in a steaming fashion for faster and more efficient hashing\n     *   example 1: sha1('Kevin van Zonneveld')\n     *   returns 1: '54916d2e62f65b3afa6e192e6a601cdbe5cb5897'\n     */\n    static sha1(str: string) {\n        let _rotLeft = function (n: any, s: any) {\n            let t4 = (n << s) | (n >>> (32 - s))\n            return t4\n        }\n\n        let _cvtHex = function (val: any) {\n            let str = \"\"\n            let i\n            let v\n\n            for (i = 7; i >= 0; i--) {\n                v = (val >>> (i * 4)) & 0x0f\n                str += v.toString(16)\n            }\n            return str\n        }\n\n        let blockstart\n        let i, j\n        let W = new Array(80)\n        let H0 = 0x67452301\n        let H1 = 0xefcdab89\n        let H2 = 0x98badcfe\n        let H3 = 0x10325476\n        let H4 = 0xc3d2e1f0\n        let A, B, C, D, E\n        let temp\n\n        // utf8_encode\n        str = /*unescape*/ encodeURIComponent(str)\n        let strLen = str.length\n\n        let wordArray = []\n        for (i = 0; i < strLen - 3; i += 4) {\n            j =\n                (str.charCodeAt(i) << 24) |\n                (str.charCodeAt(i + 1) << 16) |\n                (str.charCodeAt(i + 2) << 8) |\n                str.charCodeAt(i + 3)\n            wordArray.push(j)\n        }\n\n        switch (strLen % 4) {\n            case 0:\n                i = 0x080000000\n                break\n            case 1:\n                i = (str.charCodeAt(strLen - 1) << 24) | 0x0800000\n                break\n            case 2:\n                i =\n                    (str.charCodeAt(strLen - 2) << 24) |\n                    (str.charCodeAt(strLen - 1) << 16) |\n                    0x08000\n                break\n            case 3:\n                i =\n                    (str.charCodeAt(strLen - 3) << 24) |\n                    (str.charCodeAt(strLen - 2) << 16) |\n                    (str.charCodeAt(strLen - 1) << 8) |\n                    0x80\n                break\n        }\n\n        wordArray.push(i)\n\n        while (wordArray.length % 16 !== 14) {\n            wordArray.push(0)\n        }\n\n        wordArray.push(strLen >>> 29)\n        wordArray.push((strLen << 3) & 0x0ffffffff)\n\n        for (blockstart = 0; blockstart < wordArray.length; blockstart += 16) {\n            for (i = 0; i < 16; i++) {\n                W[i] = wordArray[blockstart + i]\n            }\n            for (i = 16; i <= 79; i++) {\n                W[i] = _rotLeft(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1)\n            }\n\n            A = H0\n            B = H1\n            C = H2\n            D = H3\n            E = H4\n\n            for (i = 0; i <= 19; i++) {\n                temp =\n                    (_rotLeft(A, 5) +\n                        ((B & C) | (~B & D)) +\n                        E +\n                        W[i] +\n                        0x5a827999) &\n                    0x0ffffffff\n                E = D\n                D = C\n                C = _rotLeft(B, 30)\n                B = A\n                A = temp\n            }\n\n            for (i = 20; i <= 39; i++) {\n                temp =\n                    (_rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0x6ed9eba1) &\n                    0x0ffffffff\n                E = D\n                D = C\n                C = _rotLeft(B, 30)\n                B = A\n                A = temp\n            }\n\n            for (i = 40; i <= 59; i++) {\n                temp =\n                    (_rotLeft(A, 5) +\n                        ((B & C) | (B & D) | (C & D)) +\n                        E +\n                        W[i] +\n                        0x8f1bbcdc) &\n                    0x0ffffffff\n                E = D\n                D = C\n                C = _rotLeft(B, 30)\n                B = A\n                A = temp\n            }\n\n            for (i = 60; i <= 79; i++) {\n                temp =\n                    (_rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0xca62c1d6) &\n                    0x0ffffffff\n                E = D\n                D = C\n                C = _rotLeft(B, 30)\n                B = A\n                A = temp\n            }\n\n            H0 = (H0 + A) & 0x0ffffffff\n            H1 = (H1 + B) & 0x0ffffffff\n            H2 = (H2 + C) & 0x0ffffffff\n            H3 = (H3 + D) & 0x0ffffffff\n            H4 = (H4 + E) & 0x0ffffffff\n        }\n\n        temp =\n            _cvtHex(H0) + _cvtHex(H1) + _cvtHex(H2) + _cvtHex(H3) + _cvtHex(H4)\n        return temp.toLowerCase()\n    }\n}\n"]},"metadata":{},"sourceType":"module"}