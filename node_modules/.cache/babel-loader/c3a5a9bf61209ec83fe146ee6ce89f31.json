{"ast":null,"code":"import { TypeORMError } from \"./TypeORMError\";\nexport class UsingJoinColumnIsNotAllowedError extends TypeORMError {\n  constructor(entityMetadata, relation) {\n    super(`Using JoinColumn on ${entityMetadata.name}#${relation.propertyName} is wrong. ` + `You can use JoinColumn only on one-to-one and many-to-one relations.`);\n  }\n\n}","map":{"version":3,"mappings":"AAEA,SAASA,YAAT,QAA6B,gBAA7B;AAEA,OAAM,MAAOC,gCAAP,SAAgDD,YAAhD,CAA4D;EAC9DE,YAAYC,cAAZ,EAA4CC,QAA5C,EAAsE;IAClE,MACI,uBAAuBD,cAAc,CAACE,IAAI,IAAID,QAAQ,CAACE,YAAY,aAAnE,GACI,sEAFR;EAIH;;AAN6D","names":["TypeORMError","UsingJoinColumnIsNotAllowedError","constructor","entityMetadata","relation","name","propertyName"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\error\\UsingJoinColumnIsNotAllowedError.ts"],"sourcesContent":["import { EntityMetadata } from \"../metadata/EntityMetadata\"\nimport { RelationMetadata } from \"../metadata/RelationMetadata\"\nimport { TypeORMError } from \"./TypeORMError\"\n\nexport class UsingJoinColumnIsNotAllowedError extends TypeORMError {\n    constructor(entityMetadata: EntityMetadata, relation: RelationMetadata) {\n        super(\n            `Using JoinColumn on ${entityMetadata.name}#${relation.propertyName} is wrong. ` +\n                `You can use JoinColumn only on one-to-one and many-to-one relations.`,\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}