{"ast":null,"code":"import { getMetadataArgsStorage } from \"../globals\";\nimport { ObjectUtils } from \"../util/ObjectUtils\";\n/**\n * Composite unique constraint must be set on entity classes and must specify entity's fields to be unique.\n */\n\nexport function Unique(nameOrFieldsOrOptions, maybeFieldsOrOptions, maybeOptions) {\n  const name = typeof nameOrFieldsOrOptions === \"string\" ? nameOrFieldsOrOptions : undefined;\n  const fields = typeof nameOrFieldsOrOptions === \"string\" ? maybeFieldsOrOptions : nameOrFieldsOrOptions;\n  let options = ObjectUtils.isObject(nameOrFieldsOrOptions) && !Array.isArray(nameOrFieldsOrOptions) ? nameOrFieldsOrOptions : maybeOptions;\n  if (!options) options = ObjectUtils.isObject(nameOrFieldsOrOptions) && !Array.isArray(maybeFieldsOrOptions) ? maybeFieldsOrOptions : maybeOptions;\n  return function (clsOrObject, propertyName) {\n    let columns = fields;\n\n    if (propertyName !== undefined) {\n      switch (typeof propertyName) {\n        case \"string\":\n          columns = [propertyName];\n          break;\n\n        case \"symbol\":\n          columns = [propertyName.toString()];\n          break;\n      }\n    }\n\n    const args = {\n      target: propertyName ? clsOrObject.constructor : clsOrObject,\n      name: name,\n      columns,\n      deferrable: options ? options.deferrable : undefined\n    };\n    getMetadataArgsStorage().uniques.push(args);\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,sBAAT,QAAuC,YAAvC;AAGA,SAASC,WAAT,QAA4B,qBAA5B;AAoCA;;;;AAGA,OAAM,SAAUC,MAAV,CACFC,qBADE,EAMFC,oBANE,EAUFC,YAVE,EAU0B;EAE5B,MAAMC,IAAI,GACN,OAAOH,qBAAP,KAAiC,QAAjC,GACMA,qBADN,GAEMI,SAHV;EAIA,MAAMC,MAAM,GACR,OAAOL,qBAAP,KAAiC,QAAjC,GAIOC,oBAJP,GAKOD,qBANX;EAOA,IAAIM,OAAO,GACPR,WAAW,CAACS,QAAZ,CAAqBP,qBAArB,KACA,CAACQ,KAAK,CAACC,OAAN,CAAcT,qBAAd,CADD,GAEOA,qBAFP,GAGME,YAJV;EAKA,IAAI,CAACI,OAAL,EACIA,OAAO,GACHR,WAAW,CAACS,QAAZ,CAAqBP,qBAArB,KACA,CAACQ,KAAK,CAACC,OAAN,CAAcR,oBAAd,CADD,GAEOA,oBAFP,GAGMC,YAJV;EAMJ,OAAO,UACHQ,WADG,EAEHC,YAFG,EAE2B;IAE9B,IAAIC,OAAO,GAAGP,MAAd;;IAEA,IAAIM,YAAY,KAAKP,SAArB,EAAgC;MAC5B,QAAQ,OAAOO,YAAf;QACI,KAAK,QAAL;UACIC,OAAO,GAAG,CAACD,YAAD,CAAV;UACA;;QAEJ,KAAK,QAAL;UACIC,OAAO,GAAG,CAACD,YAAY,CAACE,QAAb,EAAD,CAAV;UACA;MAPR;IASH;;IAED,MAAMC,IAAI,GAAuB;MAC7BC,MAAM,EAAEJ,YAAY,GACdD,WAAW,CAACM,WADE,GAEbN,WAHsB;MAI7BP,IAAI,EAAEA,IAJuB;MAK7BS,OAL6B;MAM7BK,UAAU,EAAEX,OAAO,GAAGA,OAAO,CAACW,UAAX,GAAwBb;IANd,CAAjC;IAQAP,sBAAsB,GAAGqB,OAAzB,CAAiCC,IAAjC,CAAsCL,IAAtC;EACH,CA3BD;AA4BH","names":["getMetadataArgsStorage","ObjectUtils","Unique","nameOrFieldsOrOptions","maybeFieldsOrOptions","maybeOptions","name","undefined","fields","options","isObject","Array","isArray","clsOrObject","propertyName","columns","toString","args","target","constructor","deferrable","uniques","push"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\decorator\\Unique.ts"],"sourcesContent":["import { getMetadataArgsStorage } from \"../globals\"\nimport { UniqueMetadataArgs } from \"../metadata-args/UniqueMetadataArgs\"\nimport { UniqueOptions } from \"./options/UniqueOptions\"\nimport { ObjectUtils } from \"../util/ObjectUtils\"\n\n/**\n * Composite unique constraint must be set on entity classes and must specify entity's fields to be unique.\n */\nexport function Unique(\n    name: string,\n    fields: string[],\n    options?: UniqueOptions,\n): ClassDecorator & PropertyDecorator\n\n/**\n * Composite unique constraint must be set on entity classes and must specify entity's fields to be unique.\n */\nexport function Unique(\n    fields: string[],\n    options?: UniqueOptions,\n): ClassDecorator & PropertyDecorator\n\n/**\n * Composite unique constraint must be set on entity classes and must specify entity's fields to be unique.\n */\nexport function Unique(\n    fields: (object?: any) => any[] | { [key: string]: number },\n    options?: UniqueOptions,\n): ClassDecorator & PropertyDecorator\n\n/**\n * Composite unique constraint must be set on entity classes and must specify entity's fields to be unique.\n */\nexport function Unique(\n    name: string,\n    fields: (object?: any) => any[] | { [key: string]: number },\n    options?: UniqueOptions,\n): ClassDecorator & PropertyDecorator\n\n/**\n * Composite unique constraint must be set on entity classes and must specify entity's fields to be unique.\n */\nexport function Unique(\n    nameOrFieldsOrOptions?:\n        | string\n        | string[]\n        | ((object: any) => any[] | { [key: string]: number })\n        | UniqueOptions,\n    maybeFieldsOrOptions?:\n        | ((object?: any) => any[] | { [key: string]: number })\n        | string[]\n        | UniqueOptions,\n    maybeOptions?: UniqueOptions,\n): ClassDecorator & PropertyDecorator {\n    const name =\n        typeof nameOrFieldsOrOptions === \"string\"\n            ? nameOrFieldsOrOptions\n            : undefined\n    const fields =\n        typeof nameOrFieldsOrOptions === \"string\"\n            ? <\n                  | ((object?: any) => any[] | { [key: string]: number })\n                  | string[]\n              >maybeFieldsOrOptions\n            : (nameOrFieldsOrOptions as string[])\n    let options =\n        ObjectUtils.isObject(nameOrFieldsOrOptions) &&\n        !Array.isArray(nameOrFieldsOrOptions)\n            ? (nameOrFieldsOrOptions as UniqueOptions)\n            : maybeOptions\n    if (!options)\n        options =\n            ObjectUtils.isObject(nameOrFieldsOrOptions) &&\n            !Array.isArray(maybeFieldsOrOptions)\n                ? (maybeFieldsOrOptions as UniqueOptions)\n                : maybeOptions\n\n    return function (\n        clsOrObject: Function | Object,\n        propertyName?: string | symbol,\n    ) {\n        let columns = fields\n\n        if (propertyName !== undefined) {\n            switch (typeof propertyName) {\n                case \"string\":\n                    columns = [propertyName]\n                    break\n\n                case \"symbol\":\n                    columns = [propertyName.toString()]\n                    break\n            }\n        }\n\n        const args: UniqueMetadataArgs = {\n            target: propertyName\n                ? clsOrObject.constructor\n                : (clsOrObject as Function),\n            name: name,\n            columns,\n            deferrable: options ? options.deferrable : undefined,\n        }\n        getMetadataArgsStorage().uniques.push(args)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}