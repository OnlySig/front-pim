{"ast":null,"code":"import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when consumer tries to connect when he already connected.\n */\n\nexport class CannotConnectAlreadyConnectedError extends TypeORMError {\n  constructor(connectionName) {\n    super(`Cannot create a \"${connectionName}\" connection because connection to the database already established.`);\n  }\n\n}","map":{"version":3,"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AAEA;;;;AAGA,OAAM,MAAOC,kCAAP,SAAkDD,YAAlD,CAA8D;EAChEE,YAAYC,cAAZ,EAAkC;IAC9B,MACI,oBAAoBA,cAAc,sEADtC;EAGH;;AAL+D","names":["TypeORMError","CannotConnectAlreadyConnectedError","constructor","connectionName"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\error\\CannotConnectAlreadyConnectedError.ts"],"sourcesContent":["import { TypeORMError } from \"./TypeORMError\"\n\n/**\n * Thrown when consumer tries to connect when he already connected.\n */\nexport class CannotConnectAlreadyConnectedError extends TypeORMError {\n    constructor(connectionName: string) {\n        super(\n            `Cannot create a \"${connectionName}\" connection because connection to the database already established.`,\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}