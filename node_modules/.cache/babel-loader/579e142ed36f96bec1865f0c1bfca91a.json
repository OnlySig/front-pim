{"ast":null,"code":"import { getMetadataArgsStorage } from \"../../globals\";\n/**\n * Classes decorated with this decorator will listen to ORM events and their methods will be triggered when event\n * occurs. Those classes must implement EventSubscriberInterface interface.\n */\n\nexport function EventSubscriber() {\n  return function (target) {\n    getMetadataArgsStorage().entitySubscribers.push({\n      target: target\n    });\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,sBAAT,QAAuC,eAAvC;AAGA;;;;;AAIA,OAAM,SAAUC,eAAV,GAAyB;EAC3B,OAAO,UAAUC,MAAV,EAA0B;IAC7BF,sBAAsB,GAAGG,iBAAzB,CAA2CC,IAA3C,CAAgD;MAC5CF,MAAM,EAAEA;IADoC,CAAhD;EAGH,CAJD;AAKH","names":["getMetadataArgsStorage","EventSubscriber","target","entitySubscribers","push"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\decorator\\listeners\\EventSubscriber.ts"],"sourcesContent":["import { getMetadataArgsStorage } from \"../../globals\"\nimport { EntitySubscriberMetadataArgs } from \"../../metadata-args/EntitySubscriberMetadataArgs\"\n\n/**\n * Classes decorated with this decorator will listen to ORM events and their methods will be triggered when event\n * occurs. Those classes must implement EventSubscriberInterface interface.\n */\nexport function EventSubscriber(): ClassDecorator {\n    return function (target: Function) {\n        getMetadataArgsStorage().entitySubscribers.push({\n            target: target,\n        } as EntitySubscriberMetadataArgs)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}