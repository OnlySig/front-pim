{"ast":null,"code":"/**\n * Interface for entity metadata mappings stored inside \"schemas\" instead of models decorated by decorators.\n */\nexport class EntitySchema {\n  constructor(options) {\n    this.options = options;\n    this[\"@instanceof\"] = Symbol.for(\"EntitySchema\");\n  }\n\n}","map":{"version":3,"mappings":"AAEA;;;AAGA,OAAM,MAAOA,YAAP,CAAmB;EAGrBC,YAAmBC,OAAnB,EAAkD;IAA/B;IAFV,sBAAgBC,MAAM,CAACC,GAAP,CAAW,cAAX,CAAhB;EAE6C;;AAHjC","names":["EntitySchema","constructor","options","Symbol","for"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\entity-schema\\EntitySchema.ts"],"sourcesContent":["import { EntitySchemaOptions } from \"./EntitySchemaOptions\"\n\n/**\n * Interface for entity metadata mappings stored inside \"schemas\" instead of models decorated by decorators.\n */\nexport class EntitySchema<T = any> {\n    readonly \"@instanceof\" = Symbol.for(\"EntitySchema\")\n\n    constructor(public options: EntitySchemaOptions<T>) {}\n}\n"]},"metadata":{},"sourceType":"module"}