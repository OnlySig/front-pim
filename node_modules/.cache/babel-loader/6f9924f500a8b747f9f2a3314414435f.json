{"ast":null,"code":"import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when method expects entity but instead something else is given.\n */\n\nexport class MustBeEntityError extends TypeORMError {\n  constructor(operation, wrongValue) {\n    super(`Cannot ${operation}, given value must be an entity, instead \"${wrongValue}\" is given.`);\n  }\n\n}","map":{"version":3,"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AAEA;;;;AAGA,OAAM,MAAOC,iBAAP,SAAiCD,YAAjC,CAA6C;EAC/CE,YAAYC,SAAZ,EAA+BC,UAA/B,EAA8C;IAC1C,MACI,UAAUD,SAAS,6CAA6CC,UAAU,aAD9E;EAGH;;AAL8C","names":["TypeORMError","MustBeEntityError","constructor","operation","wrongValue"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\error\\MustBeEntityError.ts"],"sourcesContent":["import { TypeORMError } from \"./TypeORMError\"\n\n/**\n * Thrown when method expects entity but instead something else is given.\n */\nexport class MustBeEntityError extends TypeORMError {\n    constructor(operation: string, wrongValue: any) {\n        super(\n            `Cannot ${operation}, given value must be an entity, instead \"${wrongValue}\" is given.`,\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}