{"ast":null,"code":"import { TypeORMError } from \"./TypeORMError\";\nexport class UsingJoinTableIsNotAllowedError extends TypeORMError {\n  constructor(entityMetadata, relation) {\n    super(`Using JoinTable on ${entityMetadata.name}#${relation.propertyName} is wrong. ` + `${entityMetadata.name}#${relation.propertyName} has ${relation.relationType} relation, ` + `however you can use JoinTable only on many-to-many relations.`);\n  }\n\n}","map":{"version":3,"mappings":"AAEA,SAASA,YAAT,QAA6B,gBAA7B;AAEA,OAAM,MAAOC,+BAAP,SAA+CD,YAA/C,CAA2D;EAC7DE,YAAYC,cAAZ,EAA4CC,QAA5C,EAAsE;IAClE,MACI,sBAAsBD,cAAc,CAACE,IAAI,IAAID,QAAQ,CAACE,YAAY,aAAlE,GACI,GAAGH,cAAc,CAACE,IAAI,IAAID,QAAQ,CAACE,YAAY,QAAQF,QAAQ,CAACG,YAAY,aADhF,GAEI,+DAHR;EAKH;;AAP4D","names":["TypeORMError","UsingJoinTableIsNotAllowedError","constructor","entityMetadata","relation","name","propertyName","relationType"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\error\\UsingJoinTableIsNotAllowedError.ts"],"sourcesContent":["import { EntityMetadata } from \"../metadata/EntityMetadata\"\nimport { RelationMetadata } from \"../metadata/RelationMetadata\"\nimport { TypeORMError } from \"./TypeORMError\"\n\nexport class UsingJoinTableIsNotAllowedError extends TypeORMError {\n    constructor(entityMetadata: EntityMetadata, relation: RelationMetadata) {\n        super(\n            `Using JoinTable on ${entityMetadata.name}#${relation.propertyName} is wrong. ` +\n                `${entityMetadata.name}#${relation.propertyName} has ${relation.relationType} relation, ` +\n                `however you can use JoinTable only on many-to-many relations.`,\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}