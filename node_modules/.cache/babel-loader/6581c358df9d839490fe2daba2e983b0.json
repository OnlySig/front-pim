{"ast":null,"code":"import { getMetadataArgsStorage } from \"../../globals\";\n/**\n * Creates a \"level\"/\"length\" column to the table that holds a closure table.\n */\n\nexport function TreeLevelColumn() {\n  return function (object, propertyName) {\n    getMetadataArgsStorage().columns.push({\n      target: object.constructor,\n      propertyName: propertyName,\n      mode: \"treeLevel\",\n      options: {}\n    });\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,sBAAT,QAAuC,eAAvC;AAGA;;;;AAGA,OAAM,SAAUC,eAAV,GAAyB;EAC3B,OAAO,UAAUC,MAAV,EAA0BC,YAA1B,EAA8C;IACjDH,sBAAsB,GAAGI,OAAzB,CAAiCC,IAAjC,CAAsC;MAClCC,MAAM,EAAEJ,MAAM,CAACK,WADmB;MAElCJ,YAAY,EAAEA,YAFoB;MAGlCK,IAAI,EAAE,WAH4B;MAIlCC,OAAO,EAAE;IAJyB,CAAtC;EAMH,CAPD;AAQH","names":["getMetadataArgsStorage","TreeLevelColumn","object","propertyName","columns","push","target","constructor","mode","options"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\decorator\\tree\\TreeLevelColumn.ts"],"sourcesContent":["import { getMetadataArgsStorage } from \"../../globals\"\nimport { ColumnMetadataArgs } from \"../../metadata-args/ColumnMetadataArgs\"\n\n/**\n * Creates a \"level\"/\"length\" column to the table that holds a closure table.\n */\nexport function TreeLevelColumn(): PropertyDecorator {\n    return function (object: Object, propertyName: string) {\n        getMetadataArgsStorage().columns.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            mode: \"treeLevel\",\n            options: {},\n        } as ColumnMetadataArgs)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}