{"ast":null,"code":"import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when specified entity property was not found.\n */\n\nexport class EntityPropertyNotFoundError extends TypeORMError {\n  constructor(propertyPath, metadata) {\n    super(propertyPath);\n    Object.setPrototypeOf(this, EntityPropertyNotFoundError.prototype);\n    this.message = `Property \"${propertyPath}\" was not found in \"${metadata.targetName}\". Make sure your query is correct.`;\n  }\n\n}","map":{"version":3,"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AAGA;;;;AAGA,OAAM,MAAOC,2BAAP,SAA2CD,YAA3C,CAAuD;EACzDE,YAAYC,YAAZ,EAAkCC,QAAlC,EAA0D;IACtD,MAAMD,YAAN;IACAE,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4BL,2BAA2B,CAACM,SAAxD;IACA,KAAKC,OAAL,GAAe,aAAaL,YAAY,uBAAuBC,QAAQ,CAACK,UAAU,qCAAlF;EACH;;AALwD","names":["TypeORMError","EntityPropertyNotFoundError","constructor","propertyPath","metadata","Object","setPrototypeOf","prototype","message","targetName"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\error\\EntityPropertyNotFoundError.ts"],"sourcesContent":["import { TypeORMError } from \"./TypeORMError\"\nimport { EntityMetadata } from \"../metadata/EntityMetadata\"\n\n/**\n * Thrown when specified entity property was not found.\n */\nexport class EntityPropertyNotFoundError extends TypeORMError {\n    constructor(propertyPath: string, metadata: EntityMetadata) {\n        super(propertyPath)\n        Object.setPrototypeOf(this, EntityPropertyNotFoundError.prototype)\n        this.message = `Property \"${propertyPath}\" was not found in \"${metadata.targetName}\". Make sure your query is correct.`\n    }\n}\n"]},"metadata":{},"sourceType":"module"}