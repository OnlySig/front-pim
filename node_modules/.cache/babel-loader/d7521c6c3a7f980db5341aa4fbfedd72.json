{"ast":null,"code":"/**\n * Check metadata contains all information about table's check constraints.\n */\nexport class CheckMetadata {\n  // ---------------------------------------------------------------------\n  // Constructor\n  // ---------------------------------------------------------------------\n  constructor(options) {\n    this.entityMetadata = options.entityMetadata;\n\n    if (options.args) {\n      this.target = options.args.target;\n      this.expression = options.args.expression;\n      this.givenName = options.args.name;\n    }\n  } // ---------------------------------------------------------------------\n  // Public Build Methods\n  // ---------------------------------------------------------------------\n\n  /**\n   * Builds some depend check constraint properties.\n   * Must be called after all entity metadata's properties map, columns and relations are built.\n   */\n\n\n  build(namingStrategy) {\n    this.name = this.givenName ? this.givenName : namingStrategy.checkConstraintName(this.entityMetadata.tableName, this.expression);\n    return this;\n  }\n\n}","map":{"version":3,"mappings":"AAIA;;;AAGA,OAAM,MAAOA,aAAP,CAAoB;EAgCtB;EACA;EACA;EAEAC,YAAYC,OAAZ,EAGC;IACG,KAAKC,cAAL,GAAsBD,OAAO,CAACC,cAA9B;;IAEA,IAAID,OAAO,CAACE,IAAZ,EAAkB;MACd,KAAKC,MAAL,GAAcH,OAAO,CAACE,IAAR,CAAaC,MAA3B;MACA,KAAKC,UAAL,GAAkBJ,OAAO,CAACE,IAAR,CAAaE,UAA/B;MACA,KAAKC,SAAL,GAAiBL,OAAO,CAACE,IAAR,CAAaI,IAA9B;IACH;EACJ,CA/CqB,CAiDtB;EACA;EACA;;EAEA;;;;;;EAIAC,KAAK,CAACC,cAAD,EAAwC;IACzC,KAAKF,IAAL,GAAY,KAAKD,SAAL,GACN,KAAKA,SADC,GAENG,cAAc,CAACC,mBAAf,CACI,KAAKR,cAAL,CAAoBS,SADxB,EAEI,KAAKN,UAFT,CAFN;IAMA,OAAO,IAAP;EACH;;AAjEqB","names":["CheckMetadata","constructor","options","entityMetadata","args","target","expression","givenName","name","build","namingStrategy","checkConstraintName","tableName"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\metadata\\CheckMetadata.ts"],"sourcesContent":["import { EntityMetadata } from \"./EntityMetadata\"\nimport { NamingStrategyInterface } from \"../naming-strategy/NamingStrategyInterface\"\nimport { CheckMetadataArgs } from \"../metadata-args/CheckMetadataArgs\"\n\n/**\n * Check metadata contains all information about table's check constraints.\n */\nexport class CheckMetadata {\n    // ---------------------------------------------------------------------\n    // Public Properties\n    // ---------------------------------------------------------------------\n\n    /**\n     * Entity metadata of the class to which this check constraint is applied.\n     */\n    entityMetadata: EntityMetadata\n\n    /**\n     * Target class to which metadata is applied.\n     */\n    target?: Function | string\n\n    /**\n     * Check expression.\n     */\n    expression: string\n\n    /**\n     * User specified check constraint name.\n     */\n    givenName?: string\n\n    /**\n     * Final check constraint name.\n     * If check constraint name was given by a user then it stores normalized (by naming strategy) givenName.\n     * If check constraint name was not given then its generated.\n     */\n    name: string\n\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n\n    constructor(options: {\n        entityMetadata: EntityMetadata\n        args?: CheckMetadataArgs\n    }) {\n        this.entityMetadata = options.entityMetadata\n\n        if (options.args) {\n            this.target = options.args.target\n            this.expression = options.args.expression\n            this.givenName = options.args.name\n        }\n    }\n\n    // ---------------------------------------------------------------------\n    // Public Build Methods\n    // ---------------------------------------------------------------------\n\n    /**\n     * Builds some depend check constraint properties.\n     * Must be called after all entity metadata's properties map, columns and relations are built.\n     */\n    build(namingStrategy: NamingStrategyInterface): this {\n        this.name = this.givenName\n            ? this.givenName\n            : namingStrategy.checkConstraintName(\n                  this.entityMetadata.tableName,\n                  this.expression,\n              )\n        return this\n    }\n}\n"]},"metadata":{},"sourceType":"module"}