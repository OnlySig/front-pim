{"ast":null,"code":"import { MissingDriverError } from \"../error/MissingDriverError\";\nimport { CockroachDriver } from \"./cockroachdb/CockroachDriver\";\nimport { MongoDriver } from \"./mongodb/MongoDriver\";\nimport { SqlServerDriver } from \"./sqlserver/SqlServerDriver\";\nimport { OracleDriver } from \"./oracle/OracleDriver\";\nimport { SqliteDriver } from \"./sqlite/SqliteDriver\";\nimport { CordovaDriver } from \"./cordova/CordovaDriver\";\nimport { ReactNativeDriver } from \"./react-native/ReactNativeDriver\";\nimport { NativescriptDriver } from \"./nativescript/NativescriptDriver\";\nimport { SqljsDriver } from \"./sqljs/SqljsDriver\";\nimport { MysqlDriver } from \"./mysql/MysqlDriver\";\nimport { PostgresDriver } from \"./postgres/PostgresDriver\";\nimport { ExpoDriver } from \"./expo/ExpoDriver\";\nimport { AuroraMysqlDriver } from \"./aurora-mysql/AuroraMysqlDriver\";\nimport { AuroraPostgresDriver } from \"./aurora-postgres/AuroraPostgresDriver\";\nimport { SapDriver } from \"./sap/SapDriver\";\nimport { BetterSqlite3Driver } from \"./better-sqlite3/BetterSqlite3Driver\";\nimport { CapacitorDriver } from \"./capacitor/CapacitorDriver\";\nimport { SpannerDriver } from \"./spanner/SpannerDriver\";\n/**\n * Helps to create drivers.\n */\n\nexport class DriverFactory {\n  /**\n   * Creates a new driver depend on a given connection's driver type.\n   */\n  create(connection) {\n    const {\n      type\n    } = connection.options;\n\n    switch (type) {\n      case \"mysql\":\n        return new MysqlDriver(connection);\n\n      case \"postgres\":\n        return new PostgresDriver(connection);\n\n      case \"cockroachdb\":\n        return new CockroachDriver(connection);\n\n      case \"sap\":\n        return new SapDriver(connection);\n\n      case \"mariadb\":\n        return new MysqlDriver(connection);\n\n      case \"sqlite\":\n        return new SqliteDriver(connection);\n\n      case \"better-sqlite3\":\n        return new BetterSqlite3Driver(connection);\n\n      case \"cordova\":\n        return new CordovaDriver(connection);\n\n      case \"nativescript\":\n        return new NativescriptDriver(connection);\n\n      case \"react-native\":\n        return new ReactNativeDriver(connection);\n\n      case \"sqljs\":\n        return new SqljsDriver(connection);\n\n      case \"oracle\":\n        return new OracleDriver(connection);\n\n      case \"mssql\":\n        return new SqlServerDriver(connection);\n\n      case \"mongodb\":\n        return new MongoDriver(connection);\n\n      case \"expo\":\n        return new ExpoDriver(connection);\n\n      case \"aurora-mysql\":\n        return new AuroraMysqlDriver(connection);\n\n      case \"aurora-postgres\":\n        return new AuroraPostgresDriver(connection);\n\n      case \"capacitor\":\n        return new CapacitorDriver(connection);\n\n      case \"spanner\":\n        return new SpannerDriver(connection);\n\n      default:\n        throw new MissingDriverError(type, [\"aurora-mysql\", \"aurora-postgres\", \"better-sqlite3\", \"capacitor\", \"cockroachdb\", \"cordova\", \"expo\", \"mariadb\", \"mongodb\", \"mssql\", \"mysql\", \"nativescript\", \"oracle\", \"postgres\", \"react-native\", \"sap\", \"sqlite\", \"sqljs\", \"spanner\"]);\n    }\n  }\n\n}","map":{"version":3,"mappings":"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","names":["MissingDriverError","CockroachDriver","MongoDriver","SqlServerDriver","OracleDriver","SqliteDriver","CordovaDriver","ReactNativeDriver","NativescriptDriver","SqljsDriver","MysqlDriver","PostgresDriver","ExpoDriver","AuroraMysqlDriver","AuroraPostgresDriver","SapDriver","BetterSqlite3Driver","CapacitorDriver","SpannerDriver","DriverFactory","create","connection","type","options"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\driver\\DriverFactory.ts"],"sourcesContent":["import { MissingDriverError } from \"../error/MissingDriverError\"\nimport { CockroachDriver } from \"./cockroachdb/CockroachDriver\"\nimport { MongoDriver } from \"./mongodb/MongoDriver\"\nimport { SqlServerDriver } from \"./sqlserver/SqlServerDriver\"\nimport { OracleDriver } from \"./oracle/OracleDriver\"\nimport { SqliteDriver } from \"./sqlite/SqliteDriver\"\nimport { CordovaDriver } from \"./cordova/CordovaDriver\"\nimport { ReactNativeDriver } from \"./react-native/ReactNativeDriver\"\nimport { NativescriptDriver } from \"./nativescript/NativescriptDriver\"\nimport { SqljsDriver } from \"./sqljs/SqljsDriver\"\nimport { MysqlDriver } from \"./mysql/MysqlDriver\"\nimport { PostgresDriver } from \"./postgres/PostgresDriver\"\nimport { ExpoDriver } from \"./expo/ExpoDriver\"\nimport { AuroraMysqlDriver } from \"./aurora-mysql/AuroraMysqlDriver\"\nimport { AuroraPostgresDriver } from \"./aurora-postgres/AuroraPostgresDriver\"\nimport { Driver } from \"./Driver\"\nimport { DataSource } from \"../data-source/DataSource\"\nimport { SapDriver } from \"./sap/SapDriver\"\nimport { BetterSqlite3Driver } from \"./better-sqlite3/BetterSqlite3Driver\"\nimport { CapacitorDriver } from \"./capacitor/CapacitorDriver\"\nimport { SpannerDriver } from \"./spanner/SpannerDriver\"\n\n/**\n * Helps to create drivers.\n */\nexport class DriverFactory {\n    /**\n     * Creates a new driver depend on a given connection's driver type.\n     */\n    create(connection: DataSource): Driver {\n        const { type } = connection.options\n        switch (type) {\n            case \"mysql\":\n                return new MysqlDriver(connection)\n            case \"postgres\":\n                return new PostgresDriver(connection)\n            case \"cockroachdb\":\n                return new CockroachDriver(connection)\n            case \"sap\":\n                return new SapDriver(connection)\n            case \"mariadb\":\n                return new MysqlDriver(connection)\n            case \"sqlite\":\n                return new SqliteDriver(connection)\n            case \"better-sqlite3\":\n                return new BetterSqlite3Driver(connection)\n            case \"cordova\":\n                return new CordovaDriver(connection)\n            case \"nativescript\":\n                return new NativescriptDriver(connection)\n            case \"react-native\":\n                return new ReactNativeDriver(connection)\n            case \"sqljs\":\n                return new SqljsDriver(connection)\n            case \"oracle\":\n                return new OracleDriver(connection)\n            case \"mssql\":\n                return new SqlServerDriver(connection)\n            case \"mongodb\":\n                return new MongoDriver(connection)\n            case \"expo\":\n                return new ExpoDriver(connection)\n            case \"aurora-mysql\":\n                return new AuroraMysqlDriver(connection)\n            case \"aurora-postgres\":\n                return new AuroraPostgresDriver(connection)\n            case \"capacitor\":\n                return new CapacitorDriver(connection)\n            case \"spanner\":\n                return new SpannerDriver(connection)\n            default:\n                throw new MissingDriverError(type, [\n                    \"aurora-mysql\",\n                    \"aurora-postgres\",\n                    \"better-sqlite3\",\n                    \"capacitor\",\n                    \"cockroachdb\",\n                    \"cordova\",\n                    \"expo\",\n                    \"mariadb\",\n                    \"mongodb\",\n                    \"mssql\",\n                    \"mysql\",\n                    \"nativescript\",\n                    \"oracle\",\n                    \"postgres\",\n                    \"react-native\",\n                    \"sap\",\n                    \"sqlite\",\n                    \"sqljs\",\n                    \"spanner\",\n                ])\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}