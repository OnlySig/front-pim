{"ast":null,"code":"export class ViewUtils {\n  /**\n   * Comparator for .sort() that will order views bases on dependencies in creation order\n   */\n  static viewMetadataCmp(metadataA, metadataB) {\n    if (!metadataA || !metadataB) {\n      return 0;\n    }\n\n    if (metadataA.dependsOn && (metadataA.dependsOn.has(metadataB.target) || metadataA.dependsOn.has(metadataB.name))) {\n      return 1;\n    }\n\n    if (metadataB.dependsOn && (metadataB.dependsOn.has(metadataA.target) || metadataB.dependsOn.has(metadataA.name))) {\n      return -1;\n    }\n\n    return 0;\n  }\n\n}","map":{"version":3,"mappings":"AAEA,OAAM,MAAOA,SAAP,CAAgB;EAClB;;;EAGsB,OAAfC,eAAe,CAClBC,SADkB,EAElBC,SAFkB,EAEmB;IAErC,IAAI,CAACD,SAAD,IAAc,CAACC,SAAnB,EAA8B;MAC1B,OAAO,CAAP;IACH;;IACD,IACID,SAAS,CAACE,SAAV,KACCF,SAAS,CAACE,SAAV,CAAoBC,GAApB,CAAwBF,SAAS,CAACG,MAAlC,KACGJ,SAAS,CAACE,SAAV,CAAoBC,GAApB,CAAwBF,SAAS,CAACI,IAAlC,CAFJ,CADJ,EAIE;MACE,OAAO,CAAP;IACH;;IACD,IACIJ,SAAS,CAACC,SAAV,KACCD,SAAS,CAACC,SAAV,CAAoBC,GAApB,CAAwBH,SAAS,CAACI,MAAlC,KACGH,SAAS,CAACC,SAAV,CAAoBC,GAApB,CAAwBH,SAAS,CAACK,IAAlC,CAFJ,CADJ,EAIE;MACE,OAAO,CAAC,CAAR;IACH;;IACD,OAAO,CAAP;EACH;;AA1BiB","names":["ViewUtils","viewMetadataCmp","metadataA","metadataB","dependsOn","has","target","name"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\schema-builder\\util\\ViewUtils.ts"],"sourcesContent":["import { EntityMetadata } from \"../../metadata/EntityMetadata\"\n\nexport class ViewUtils {\n    /**\n     * Comparator for .sort() that will order views bases on dependencies in creation order\n     */\n    static viewMetadataCmp(\n        metadataA: EntityMetadata | undefined,\n        metadataB: EntityMetadata | undefined,\n    ): number {\n        if (!metadataA || !metadataB) {\n            return 0\n        }\n        if (\n            metadataA.dependsOn &&\n            (metadataA.dependsOn.has(metadataB.target) ||\n                metadataA.dependsOn.has(metadataB.name))\n        ) {\n            return 1\n        }\n        if (\n            metadataB.dependsOn &&\n            (metadataB.dependsOn.has(metadataA.target) ||\n                metadataB.dependsOn.has(metadataA.name))\n        ) {\n            return -1\n        }\n        return 0\n    }\n}\n"]},"metadata":{},"sourceType":"module"}