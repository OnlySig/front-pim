{"ast":null,"code":"/**\n * Broadcaster execution result - promises executed by operations and number of executed listeners and subscribers.\n */\nexport class BroadcasterResult {\n  constructor() {\n    /**\n     * Number of executed listeners and subscribers.\n     */\n    this.count = 0;\n    /**\n     * Promises returned by listeners and subscribers which needs to be awaited.\n     */\n\n    this.promises = [];\n  }\n  /**\n   * Wait for all promises to settle\n   */\n\n\n  async wait() {\n    if (this.promises.length > 0) {\n      await Promise.all(this.promises);\n    }\n\n    return this;\n  }\n\n}","map":{"version":3,"mappings":"AAAA;;;AAGA,OAAM,MAAOA,iBAAP,CAAwB;EAA9BC;IACI;;;IAGA,aAAgB,CAAhB;IAEA;;;;IAGA,gBAA2B,EAA3B;EAYH;EAVG;;;;;EAGU,MAAJC,IAAI;IACN,IAAI,KAAKC,QAAL,CAAcC,MAAd,GAAuB,CAA3B,EAA8B;MAC1B,MAAMC,OAAO,CAACC,GAAR,CAAY,KAAKH,QAAjB,CAAN;IACH;;IAED,OAAO,IAAP;EACH;;AApByB","names":["BroadcasterResult","constructor","wait","promises","length","Promise","all"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\subscriber\\BroadcasterResult.ts"],"sourcesContent":["/**\n * Broadcaster execution result - promises executed by operations and number of executed listeners and subscribers.\n */\nexport class BroadcasterResult {\n    /**\n     * Number of executed listeners and subscribers.\n     */\n    count: number = 0\n\n    /**\n     * Promises returned by listeners and subscribers which needs to be awaited.\n     */\n    promises: Promise<any>[] = []\n\n    /**\n     * Wait for all promises to settle\n     */\n    async wait(): Promise<BroadcasterResult> {\n        if (this.promises.length > 0) {\n            await Promise.all(this.promises)\n        }\n\n        return this\n    }\n}\n"]},"metadata":{},"sourceType":"module"}