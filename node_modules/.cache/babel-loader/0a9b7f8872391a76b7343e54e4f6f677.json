{"ast":null,"code":"/**\n * Database's table check constraint stored in this class.\n */\nexport class TableCheck {\n  // -------------------------------------------------------------------------\n  // Constructor\n  // -------------------------------------------------------------------------\n  constructor(options) {\n    this[\"@instanceof\"] = Symbol.for(\"TableCheck\");\n    /**\n     * Column that contains this constraint.\n     */\n\n    this.columnNames = [];\n    this.name = options.name;\n    this.columnNames = options.columnNames;\n    this.expression = options.expression;\n  } // -------------------------------------------------------------------------\n  // Public Methods\n  // -------------------------------------------------------------------------\n\n  /**\n   * Creates a new copy of this constraint with exactly same properties.\n   */\n\n\n  clone() {\n    return new TableCheck({\n      name: this.name,\n      columnNames: this.columnNames ? [...this.columnNames] : [],\n      expression: this.expression\n    });\n  } // -------------------------------------------------------------------------\n  // Static Methods\n  // -------------------------------------------------------------------------\n\n  /**\n   * Creates checks from the check metadata object.\n   */\n\n\n  static create(checkMetadata) {\n    return new TableCheck({\n      name: checkMetadata.name,\n      expression: checkMetadata.expression\n    });\n  }\n\n}","map":{"version":3,"mappings":"AAGA;;;AAGA,OAAM,MAAOA,UAAP,CAAiB;EAsBnB;EACA;EACA;EAEAC,YAAYC,OAAZ,EAAsC;IAzB7B,sBAAgBC,MAAM,CAACC,GAAP,CAAW,YAAX,CAAhB;IAWT;;;;IAGA,mBAAyB,EAAzB;IAYI,KAAKC,IAAL,GAAYH,OAAO,CAACG,IAApB;IACA,KAAKC,WAAL,GAAmBJ,OAAO,CAACI,WAA3B;IACA,KAAKC,UAAL,GAAkBL,OAAO,CAACK,UAA1B;EACH,CA9BkB,CAgCnB;EACA;EACA;;EAEA;;;;;EAGAC,KAAK;IACD,OAAO,IAAIR,UAAJ,CAAkC;MACrCK,IAAI,EAAE,KAAKA,IAD0B;MAErCC,WAAW,EAAE,KAAKA,WAAL,GAAmB,CAAC,GAAG,KAAKA,WAAT,CAAnB,GAA2C,EAFnB;MAGrCC,UAAU,EAAE,KAAKA;IAHoB,CAAlC,CAAP;EAKH,CA7CkB,CA+CnB;EACA;EACA;;EAEA;;;;;EAGa,OAANE,MAAM,CAACC,aAAD,EAA6B;IACtC,OAAO,IAAIV,UAAJ,CAAkC;MACrCK,IAAI,EAAEK,aAAa,CAACL,IADiB;MAErCE,UAAU,EAAEG,aAAa,CAACH;IAFW,CAAlC,CAAP;EAIH;;AA3DkB","names":["TableCheck","constructor","options","Symbol","for","name","columnNames","expression","clone","create","checkMetadata"],"sources":["C:\\Users\\darkh\\node_modules\\typeorm\\browser\\src\\schema-builder\\table\\TableCheck.ts"],"sourcesContent":["import { TableCheckOptions } from \"../options/TableCheckOptions\"\nimport { CheckMetadata } from \"../../metadata/CheckMetadata\"\n\n/**\n * Database's table check constraint stored in this class.\n */\nexport class TableCheck {\n    readonly \"@instanceof\" = Symbol.for(\"TableCheck\")\n\n    // -------------------------------------------------------------------------\n    // Public Properties\n    // -------------------------------------------------------------------------\n\n    /**\n     * Constraint name.\n     */\n    name?: string\n\n    /**\n     * Column that contains this constraint.\n     */\n    columnNames?: string[] = []\n\n    /**\n     * Check expression.\n     */\n    expression?: string\n\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n\n    constructor(options: TableCheckOptions) {\n        this.name = options.name\n        this.columnNames = options.columnNames\n        this.expression = options.expression\n    }\n\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n\n    /**\n     * Creates a new copy of this constraint with exactly same properties.\n     */\n    clone(): TableCheck {\n        return new TableCheck(<TableCheckOptions>{\n            name: this.name,\n            columnNames: this.columnNames ? [...this.columnNames] : [],\n            expression: this.expression,\n        })\n    }\n\n    // -------------------------------------------------------------------------\n    // Static Methods\n    // -------------------------------------------------------------------------\n\n    /**\n     * Creates checks from the check metadata object.\n     */\n    static create(checkMetadata: CheckMetadata): TableCheck {\n        return new TableCheck(<TableCheckOptions>{\n            name: checkMetadata.name,\n            expression: checkMetadata.expression,\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}